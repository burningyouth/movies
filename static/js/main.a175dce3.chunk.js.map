{"version":3,"sources":["serviceWorker.ts","reducers/reducers.ts","actions/actionTypes.ts","actions/actions.ts","components/SearchBar.tsx","containers/SearchBarContainer.tsx","components/ResultBar.tsx","components/Movie.tsx","components/LoadMoreButton.tsx","components/CenteredProgress.tsx","containers/LoadMoreButtonContainer.tsx","components/MoviesList.tsx","components/SearchBy.tsx","containers/SearchByContainer.tsx","components/SortSelect.tsx","components/SortBy.tsx","containers/SortByContainer.tsx","components/Main.tsx","components/Error.tsx","containers/MainContainer.tsx","components/CenteredBackdrop.tsx","components/Detail.tsx","containers/DetailContainer.tsx","containers/FetchMovies.tsx","components/Header.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","initialMoviesState","isFetching","total","page","totalPages","data","error","initialMovieState","initialSearchState","query","limit","sortBy","sortOptions","id","title","vote_count","vote_average","release_date","overview","budget","revenue","sortOrder","searchBy","formatMoney","amount","decimalCount","decimal","thousands","Math","abs","isNaN","negativeSign","i","parseInt","Number","toFixed","toString","j","length","substr","replace","slice","rootReducer","combineReducers","movies","state","action","type","newItems","payload","result","offset","concat","ceil","searchInfo","movieDetail","movie","dateOptions","year","month","day","Date","toLocaleDateString","budgetString","revenueString","fetchMoviesSuccess","fetchMovieSuccess","fetchMoviesFailure","fetchMovieFailure","fetchMovies","dispatch","getState","pageParams","fetchUrl","fetch","then","response","json","useStyles","makeStyles","root","marginTop","textField","width","button","caption","color","textAlign","SearchBar","setQuery","classes","useState","queryValue","setQueryValue","Fragment","noValidate","autoComplete","onSubmit","e","preventDefault","Grid","container","spacing","className","alignItems","item","xs","sm","TextField","label","value","onChange","target","Button","variant","SearchBarContainer","useDispatch","useSelector","queryUpdate","ResultBar","Box","Typography","display","actionArea","flexDirection","justifyContent","mainContent","link","textDecoration","genres","height","paddingLeft","paddingRight","genresWrapper","chip","marginRight","overflow","textOverflow","whiteSpace","Movie","trim","genresComponents","map","genre","Chip","size","key","media","backgroundSize","backgroundImage","poster_path","md","Card","to","CardActionArea","CardMedia","src","CardContent","gutterBottom","component","Divider","light","marginBottom","LoadMoreButton","handleClick","onClick","CenteredProgress","CircularProgress","LoadMoreButtonContainer","moviesState","MoviesList","movieComponents","theme","createStyles","breakpoints","down","SearchBy","setSearchBy","SearchByContainer","searchByUpdate","SortSelect","items","setValue","menuItems","Object","keys","MenuItem","FormControl","InputLabel","Select","labelId","SortBy","setSortBy","setSortOrder","desc","asc","SortByContainer","sortByUpdate","sortOrderUpdate","controls","flexWrap","control","Main","Container","maxWidth","justify","Error","props","message","children","MainContainer","zIndex","backgroundColor","CenteredBackdrop","open","Backdrop","Detail","Array","isArray","backgroundOrigin","lg","DetailContainer","useParams","useEffect","find","fetchMovie","FetchMovies","Header","AppBar","position","Toolbar","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a175dce3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport * as ActionTypes from '../actions/actionTypes';\nimport {\n  MovieAction,\n  MoviesState,\n  MovieState,\n  MoviesAction,\n  SearchAction,\n  SearchState,\n} from '../typings';\n\nconst initialMoviesState = {\n  isFetching: false,\n  total: 0,\n  page: 0,\n  totalPages: 0,\n  data: [],\n  error: false,\n} as MoviesState;\n\nconst initialMovieState = {\n  isFetching: false,\n  error: false,\n  data: {},\n} as MovieState;\n\nconst initialSearchState = {\n  query: '',\n  limit: 9,\n  sortBy: 'release_date',\n  sortOptions: {\n    id: 'ID',\n    title: 'Title',\n    vote_count: 'Total votes',\n    vote_average: 'Rating',\n    release_date: 'Release date',\n    overview: 'Overview',\n    budget: 'Budget',\n    revenue: 'Revenue',\n  },\n  sortOrder: 'desc',\n  searchBy: 'title',\n} as SearchState;\n\n//с просторов интернета\nfunction formatMoney(\n  amount: number | string,\n  decimalCount = 0,\n  decimal = '.',\n  thousands = ',',\n) {\n  decimalCount = Math.abs(decimalCount);\n  decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n  const negativeSign = amount < 0 ? '-' : '';\n\n  let i = parseInt(\n    (amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)),\n  ).toString();\n  let j = i.length > 3 ? i.length % 3 : 0;\n\n  return (\n    negativeSign +\n    (j ? i.substr(0, j) + thousands : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousands) +\n    (decimalCount\n      ? decimal +\n        Math.abs(+amount - +i)\n          .toFixed(decimalCount)\n          .slice(2)\n      : '')\n  );\n}\n\nconst movies = (\n  state = initialMoviesState,\n  action: MoviesAction,\n): MoviesState => {\n  switch (action.type) {\n    case ActionTypes.FETCH_MOVIES_START:\n      return { ...state, isFetching: true };\n    case ActionTypes.FETCH_MOVIES_SUCCESS:\n      let newItems = action.payload.result.data;\n      if (action.payload.result.offset > 1) {\n        newItems = state.data.concat(action.payload.result.data);\n      }\n      return {\n        ...state,\n        isFetching: false,\n        total: action.payload.result.total,\n        page: Math.ceil(newItems.length / 9),\n        totalPages: Math.ceil(action.payload.result.total / 9),\n        data: newItems,\n      };\n    case ActionTypes.FETCH_MOVIES_FAILURE:\n      return { ...state, isFetching: false, error: action.payload.error };\n    default:\n      return state;\n  }\n};\n\nconst movieDetail = (\n  state = initialMovieState,\n  action: MovieAction,\n): MovieState => {\n  switch (action.type) {\n    case ActionTypes.FETCH_MOVIE_START:\n      return { ...state, isFetching: true, error: false };\n    case ActionTypes.FETCH_MOVIE_SUCCESS:\n      const movie = action.payload.result;\n      if (!movie.id)\n        return {\n          ...state,\n          isFetching: false,\n          error: 'Movie with specified ID not found!',\n        };\n      const dateOptions = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      };\n      movie.release_date = new Date(movie.release_date).toLocaleDateString(\n        'en-US',\n        dateOptions,\n      );\n      movie.budgetString = formatMoney(movie.budget);\n      movie.revenueString = formatMoney(movie.revenue);\n      return {\n        ...state,\n        isFetching: false,\n        data: { ...movie },\n      };\n    case ActionTypes.FETCH_MOVIE_FAILURE:\n      return { ...state, isFetching: false, error: action.payload.error };\n    default:\n      return state;\n  }\n};\n\nconst searchInfo = (\n  state = initialSearchState,\n  action: SearchAction,\n): SearchState => {\n  switch (action.type) {\n    case ActionTypes.QUERY_UPDATE:\n      return {\n        ...state,\n        query: action.payload.query,\n      };\n    case ActionTypes.SEARCH_BY_UPDATE:\n      return {\n        ...state,\n        searchBy: action.payload.searchBy,\n      };\n    case ActionTypes.SORT_BY_UPDATE:\n      return {\n        ...state,\n        sortBy: action.payload.sortBy,\n      };\n    case ActionTypes.SORT_OPTIONS_UPDATE:\n      return {\n        ...state,\n        sortOptions: action.payload.sortOptions,\n      };\n    case ActionTypes.SORT_ORDER_UPDATE:\n      return {\n        ...state,\n        sortOrder: action.payload.sortOrder,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  movies,\n  searchInfo,\n  movieDetail,\n});\n\nexport default rootReducer;\n","const FETCH_MOVIES_START = 'FETCH_MOVIES_START';\nconst FETCH_MOVIE_START = 'FETCH_MOVIE_START';\nconst FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\nconst FETCH_MOVIE_SUCCESS = 'FETCH_MOVIE_SUCCESS';\nconst FETCH_MOVIES_FAILURE = 'FETCH_MOVIES_FAILURE';\nconst FETCH_MOVIE_FAILURE = 'FETCH_MOVIE_FAILURE';\nconst QUERY_UPDATE = 'QUERY_UPDATE';\nconst SORT_BY_UPDATE = 'SORT_BY_UPDATE';\nconst SEARCH_BY_UPDATE = 'SEARCH_BY_UPDATE';\nconst SORT_OPTIONS_UPDATE = 'SORT_OPTIONS_UPDATE';\nconst SORT_ORDER_UPDATE = 'SORT_ORDER_UPDATE';\n\nexport {\n  FETCH_MOVIES_START,\n  FETCH_MOVIES_FAILURE,\n  FETCH_MOVIES_SUCCESS,\n  FETCH_MOVIE_SUCCESS,\n  FETCH_MOVIE_FAILURE,\n  FETCH_MOVIE_START,\n  QUERY_UPDATE,\n  SORT_BY_UPDATE,\n  SEARCH_BY_UPDATE,\n  SORT_OPTIONS_UPDATE,\n  SORT_ORDER_UPDATE,\n};\n","import * as ActionTypes from './actionTypes';\nimport {\n  QueryUpdateAction,\n  MovieActionStart,\n  MovieActionSuccess,\n  MovieActionFailure,\n  MoviesActionSuccess,\n  Movies,\n  MovieEntity,\n  SortUpdateAction,\n  SearchUpdateAction,\n  SortOptionsUpdateAction,\n  SortOrderUpdateAction,\n  SortOptions,\n} from '../typings';\n\nfunction queryUpdate(query = ''): QueryUpdateAction {\n  return {\n    type: ActionTypes.QUERY_UPDATE,\n    payload: {\n      query,\n    },\n  };\n}\n\nfunction sortByUpdate(sortBy: keyof SortOptions): SortUpdateAction {\n  return {\n    type: ActionTypes.SORT_BY_UPDATE,\n    payload: {\n      sortBy,\n    },\n  };\n}\n\nfunction sortOptionsUpdate(sortOptions: SortOptions): SortOptionsUpdateAction {\n  return {\n    type: ActionTypes.SORT_OPTIONS_UPDATE,\n    payload: {\n      sortOptions,\n    },\n  };\n}\n\nfunction sortOrderUpdate(\n  sortOrder: 'desc' | 'asc' = 'desc',\n): SortOrderUpdateAction {\n  return {\n    type: ActionTypes.SORT_ORDER_UPDATE,\n    payload: {\n      sortOrder,\n    },\n  };\n}\n\nfunction searchByUpdate(searchBy = ''): SearchUpdateAction {\n  return {\n    type: ActionTypes.SEARCH_BY_UPDATE,\n    payload: {\n      searchBy,\n    },\n  };\n}\n\nfunction fetchMoviesStart(): MovieActionStart {\n  return {\n    type: ActionTypes.FETCH_MOVIES_START,\n  };\n}\n\nfunction fetchMovieStart(): MovieActionStart {\n  return {\n    type: ActionTypes.FETCH_MOVIE_START,\n  };\n}\n\nfunction fetchMoviesSuccess(result: Movies): MoviesActionSuccess {\n  return {\n    type: ActionTypes.FETCH_MOVIES_SUCCESS,\n    payload: {\n      result,\n    },\n  };\n}\n\nfunction fetchMovieSuccess(result: MovieEntity): MovieActionSuccess {\n  return {\n    type: ActionTypes.FETCH_MOVIE_SUCCESS,\n    payload: {\n      result,\n    },\n  };\n}\n\nfunction fetchMoviesFailure(error: string): MovieActionFailure {\n  return {\n    type: ActionTypes.FETCH_MOVIES_FAILURE,\n    payload: {\n      error,\n    },\n  };\n}\n\nfunction fetchMovieFailure(error: string): MovieActionFailure {\n  return {\n    type: ActionTypes.FETCH_MOVIE_FAILURE,\n    payload: {\n      error,\n    },\n  };\n}\n\nfunction fetchMovies(page: number = 1) {\n  return function (dispatch: any, getState: any) {\n    dispatch(fetchMoviesStart());\n\n    const searchInfo = getState().searchInfo;\n    const query = searchInfo.query,\n      sortBy = searchInfo.sortBy,\n      searchBy = searchInfo.searchBy,\n      sortOrder = searchInfo.sortOrder,\n      limit = searchInfo.limit;\n    const pageParams = `&offset=${(page - 1) * limit}&limit=${limit}`;\n    const fetchUrl = query\n      ? `https://reactjs-cdp.herokuapp.com/movies?search=${query}&sortOrder=${sortOrder}&searchBy=${searchBy}&sortBy=${sortBy}${pageParams}`\n      : `https://reactjs-cdp.herokuapp.com/movies?searchBy=${searchBy}&sortOrder=${sortOrder}&sortBy=${sortBy}${pageParams}`;\n\n    return fetch(fetchUrl)\n      .then(\n        (response) => response.json(),\n        (error) => {\n          dispatch(fetchMoviesFailure(error));\n        },\n      )\n      .then((response) => {\n        dispatch(fetchMoviesSuccess(response));\n      });\n  };\n}\n\nfunction fetchMovie(id: number) {\n  return function (dispatch: any, getState: Function) {\n    dispatch(fetchMovieStart());\n\n    if (!id) return dispatch(fetchMovieFailure('ID not specified!'));\n    const movie = getState().movies.data.find((item: MovieEntity) => {\n      if (+id === item.id) return true;\n      return false;\n    });\n    if (movie) return dispatch(fetchMovieSuccess(movie));\n    const fetchUrl = `https://reactjs-cdp.herokuapp.com/movies/${id}`;\n    return fetch(fetchUrl)\n      .then(\n        (response) => response.json(),\n        (error) => {\n          dispatch(fetchMovieFailure(error));\n        },\n      )\n      .then((response) => {\n        dispatch(fetchMovieSuccess(response));\n      });\n  };\n}\n\nexport {\n  fetchMovies,\n  fetchMovie,\n  queryUpdate,\n  sortByUpdate,\n  searchByUpdate,\n  sortOptionsUpdate,\n  sortOrderUpdate,\n};\n","import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 30,\n  },\n  textField: {\n    width: '100%',\n  },\n  button: {\n    width: '100%',\n    marginTop: 'auto',\n  },\n  caption: {\n    color: '#424242',\n    textAlign: 'right',\n  },\n});\n\nfunction SearchBar({ query, setQuery }: { query: string; setQuery: Function }) {\n  const classes = useStyles();\n  const [queryValue, setQueryValue] = useState(query);\n  return (\n    <React.Fragment>\n      <form\n        action={`/search/${queryValue}`}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          setQuery(queryValue);\n        }}\n      >\n        <Grid\n          container\n          spacing={3}\n          className={classes.root}\n          alignItems=\"flex-end\"\n        >\n          <Grid item xs={8} sm={9}>\n            <TextField\n              label=\"Search\"\n              value={queryValue}\n              className={classes.textField}\n              onChange={(e) => {\n                e.preventDefault();\n                setQueryValue(e.target.value);\n              }}\n            />\n          </Grid>\n          <Grid item xs={4} sm={3}>\n            <Button\n              type=\"submit\"\n              variant=\"outlined\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Search\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </React.Fragment>\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { queryUpdate } from '../actions/actions';\nimport SearchBar from '../components/SearchBar';\nimport { RootState } from '..';\n\nfunction SearchBarContainer() {\n  const dispatch = useDispatch();\n  const searchInfo = useSelector((state: RootState) => state.searchInfo);\n  return (\n    <SearchBar\n      query={searchInfo.query}\n      setQuery={(query: string) => dispatch(queryUpdate(query))}\n    />\n  );\n}\n\nexport default SearchBarContainer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 20,\n  },\n  caption: {\n    color: '#424242',\n  },\n});\n\nfunction ResultBar({ total }: { total: number }) {\n  const { caption, root } = useStyles();\n  return (\n    <Box className={root}>\n      <Typography variant=\"body1\" display=\"block\" className={caption}>\n        Found {total} movies\n      </Typography>\n    </Box>\n  );\n}\n\nexport default ResultBar;\n","import React from 'react';\n\nimport { MovieEntity } from '../typings';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles({\n  actionArea: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n  },\n  mainContent: {\n    width: 'calc(100% - 32px)',\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n  genres: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    width: '100%',\n    height: 50,\n    paddingLeft: 16,\n    paddingRight: 16,\n  },\n  genresWrapper: {\n    width: '100%',\n  },\n  chip: {\n    marginRight: 10,\n  },\n  overview: {\n    height: 75,\n    overflow: 'hidden',\n  },\n  title: {\n    height: 35,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n});\n\nfunction Movie({ movie }: { movie: MovieEntity }) {\n  const classes = useStyles();\n  let overview = movie.overview;\n  if (overview.length > 150)\n    overview = movie.overview.substr(0, 150).trim() + '...';\n  const genresComponents = movie.genres.slice(0, 3).map((genre) => {\n    return (\n      <Chip size=\"small\" label={genre} className={classes.chip} key={genre} />\n    );\n  });\n  const { media } = makeStyles({\n    media: {\n      height: 450,\n      width: '100%',\n      backgroundSize: 'cover',\n      backgroundImage: `url(${movie.poster_path}), url(notfound.jpg)`,\n    },\n  })();\n\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <Card>\n        <Link to={`/detail/${movie.id}`} className={classes.link}>\n          <CardActionArea className={classes.actionArea}>\n            <CardMedia\n              className={media}\n              title=\"Movie poster\"\n              src=\"notfound.jpg\"\n            />\n            <CardContent className={classes.mainContent}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"h2\"\n                className={classes.title}\n              >\n                {movie.title}\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"p\"\n                className={classes.overview}\n              >\n                {overview}\n              </Typography>\n            </CardContent>\n            <div className={classes.genresWrapper}>\n              <Divider light />\n              <div className={classes.genres}>\n                {genresComponents}\n                {movie.genres.length > 3 && (\n                  <Chip\n                    size=\"small\"\n                    label=\"···\"\n                    className={classes.chip}\n                    key=\"···\"\n                  />\n                )}\n              </div>\n            </div>\n          </CardActionArea>\n        </Link>\n      </Card>\n    </Grid>\n  );\n}\n\nexport default Movie;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    marginTop: 30,\n    marginBottom: 30,\n  },\n});\n\nfunction LoadMoreButton({ handleClick }: { handleClick: Function }) {\n  const { root } = useStyles();\n\n  return (\n    <div className={root}>\n      <Button variant=\"outlined\" color=\"primary\" onClick={() => handleClick()}>\n        Load more\n      </Button>\n    </div>\n  );\n}\n\nexport default LoadMoreButton;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    marginTop: 30,\n    marginBottom: 30,\n  },\n});\n\nfunction CenteredProgress() {\n  const { root } = useStyles();\n  return (\n    <div className={root}>\n      <CircularProgress />\n    </div>\n  );\n}\n\nexport default CenteredProgress;\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport LoadMoreButton from '../components/LoadMoreButton';\nimport { RootState } from '..';\nimport { fetchMovies } from '../actions/actions';\nimport CenteredProgress from '../components/CenteredProgress';\n\nfunction LoadMoreButtonContainer() {\n  const dispatch = useDispatch();\n  const moviesState = useSelector((state: RootState) => state.movies);\n  if (moviesState.isFetching) return <CenteredProgress />;\n  if (moviesState.total === moviesState.data.length) return <React.Fragment />;\n  return (\n    <LoadMoreButton\n      handleClick={() => dispatch(fetchMovies(moviesState.page + 1))}\n    />\n  );\n}\n\nexport default LoadMoreButtonContainer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Movie from './Movie';\nimport { MovieEntity } from '../typings';\nimport LoadMoreButtonContainer from '../containers/LoadMoreButtonContainer';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 40,\n  },\n});\n\nfunction MoviesList({ movies }: { movies: Array<MovieEntity> }) {\n  const movieComponents = movies.map((movie) => {\n    return <Movie movie={movie} key={movie.id} />;\n  });\n  const { root } = useStyles();\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={3} className={root}>\n        {movieComponents}\n      </Grid>\n      <LoadMoreButtonContainer />\n    </React.Fragment>\n  );\n}\n\nexport default MoviesList;\n","import React from 'react';\n\nimport {\n  Grid,\n  createStyles,\n  Theme,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      width: '100%',\n    },\n    searchBy: {\n      marginRight: 20,\n      [theme.breakpoints.down('xs')]: {\n        marginRight: 0,\n        marginBottom: 20,\n      },\n    },\n  }),\n);\n\nfunction SearchBy({\n  searchBy,\n  setSearchBy,\n}: {\n  searchBy: string;\n  setSearchBy: Function;\n}) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={4} className={classes.searchBy}>\n        <Button\n          variant={searchBy === 'title' ? 'contained' : 'outlined'}\n          color=\"primary\"\n          className={classes.button}\n          onClick={() => setSearchBy('title')}\n        >\n          Title\n        </Button>\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <Button\n          variant={searchBy === 'genres' ? 'contained' : 'outlined'}\n          color=\"primary\"\n          className={classes.button}\n          onClick={() => setSearchBy('genres')}\n        >\n          Genre\n        </Button>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default SearchBy;\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchByUpdate } from '../actions/actions';\nimport SearchBy from '../components/SearchBy';\nimport { RootState } from '..';\n\nfunction SearchByContainer() {\n  const dispatch = useDispatch();\n  const searchInfo = useSelector((state: RootState) => state.searchInfo);\n  return (\n    <SearchBy\n      searchBy={searchInfo.searchBy}\n      setSearchBy={(searchBy: string) => dispatch(searchByUpdate(searchBy))}\n    />\n  );\n}\n\nexport default SearchByContainer;\n","import React from 'react';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    marginTop: 20,\n  },\n});\n\nfunction SortSelect({\n  items,\n  value,\n  setValue,\n  label,\n}: {\n  items: Object;\n  value: string;\n  setValue: Function;\n  label: string;\n}) {\n  const { root } = useStyles();\n  const menuItems = Object.keys(items).map((key: string) => {\n    //@ts-ignore\n    const item = items[key];\n    return (\n      <MenuItem value={key} key={key}>\n        {item}\n      </MenuItem>\n    );\n  });\n  return (\n    <FormControl className={root}>\n      <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      >\n        {menuItems}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default SortSelect;\n","import React from 'react';\n\nimport { Grid, createStyles, Theme, makeStyles } from '@material-ui/core';\n\nimport SortSelect from './SortSelect';\nimport { SortOptions } from '../typings';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    sortBy: {\n      marginRight: 20,\n      [theme.breakpoints.down('xs')]: {\n        marginRight: 0,\n        marginBottom: 20,\n      },\n    },\n  }),\n);\n\nfunction SortBy({\n  sortBy,\n  sortOptions,\n  setSortBy,\n  sortOrder,\n  setSortOrder,\n}: {\n  sortBy: keyof SortOptions;\n  sortOptions: SortOptions;\n  setSortBy: Function;\n  sortOrder: string;\n  setSortOrder: Function;\n}) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={4} className={classes.sortBy}>\n        <SortSelect\n          label=\"Sort by\"\n          value={sortBy}\n          setValue={(value: string) => setSortBy(value)}\n          items={sortOptions}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <SortSelect\n          label=\"Sort order\"\n          value={sortOrder}\n          setValue={(value: string) => setSortOrder(value)}\n          items={{ desc: 'Descending', asc: 'Ascending' }}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default SortBy;\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sortByUpdate, sortOrderUpdate } from '../actions/actions';\nimport SortBy from '../components/SortBy';\nimport { RootState } from '..';\nimport { SortOptions } from '../typings';\n\nfunction SortByContainer() {\n  const dispatch = useDispatch();\n  const searchInfo = useSelector((state: RootState) => state.searchInfo);\n  return (\n    <SortBy\n      sortBy={searchInfo.sortBy}\n      sortOptions={searchInfo.sortOptions}\n      setSortBy={(sortBy: keyof SortOptions) => dispatch(sortByUpdate(sortBy))}\n      sortOrder={searchInfo.sortOrder}\n      setSortOrder={(sortOrder: 'desc' | 'asc') =>\n        dispatch(sortOrderUpdate(sortOrder))\n      }\n    />\n  );\n}\n\nexport default SortByContainer;\n","import React from 'react';\nimport SearchBarContainer from '../containers/SearchBarContainer';\nimport ResultBar from './ResultBar';\n\nimport Container from '@material-ui/core/Container';\nimport MoviesList from './MoviesList';\nimport { MoviesState } from '../typings';\nimport SearchByContainer from '../containers/SearchByContainer';\nimport SortByContainer from '../containers/SortByContainer';\nimport { Grid, createStyles, Theme, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    controls: {\n      display: 'flex',\n      alignItems: 'space-between',\n      flexWrap: 'wrap',\n      marginTop: 20,\n    },\n    control: {\n      width: '49%',\n      [theme.breakpoints.down('xs')]: {\n        width: '100%',\n      },\n    },\n  }),\n);\n\nfunction Main({ moviesState }: { moviesState: MoviesState }) {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"lg\">\n      <SearchBarContainer />\n      <div className={classes.controls}>\n        <Grid\n          container\n          spacing={0}\n          className={classes.control}\n          alignItems=\"center\"\n        >\n          <SearchByContainer />\n        </Grid>\n        <Grid\n          container\n          spacing={0}\n          className={classes.control}\n          alignItems=\"center\"\n          justify=\"flex-end\"\n        >\n          <SortByContainer />\n        </Grid>\n      </div>\n      <ResultBar total={moviesState.total} />\n      <MoviesList movies={moviesState.data} />\n    </Container>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: 300,\n  },\n});\n\nfunction Error(props: any) {\n  const { root } = useStyles();\n  return (\n    <Container maxWidth=\"lg\" className={root}>\n      <Typography variant=\"h5\" component=\"h1\" color=\"textSecondary\">\n        {props.message}\n        {props.children}\n      </Typography>\n    </Container>\n  );\n}\n\nexport default Error;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '..';\nimport Main from '../components/Main';\nimport Error from '../components/Error';\n\nfunction MainContainer() {\n  const moviesState = useSelector((state: RootState) => state.movies);\n\n  if (moviesState.error) return <Error message={moviesState.error} />;\n\n  return <Main moviesState={moviesState} />;\n}\n\nexport default MainContainer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Backdrop, CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    zIndex: 10,\n    backgroundColor: 'transparent',\n  },\n});\n\nfunction CenteredBackdrop({ open }: { open: boolean }) {\n  const { root } = useStyles();\n  return (\n    <Backdrop className={root} open={open}>\n      <CircularProgress color=\"primary\" />\n    </Backdrop>\n  );\n}\n\nexport default CenteredBackdrop;\n","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\n\nimport { CardMedia, Theme, createStyles } from '@material-ui/core';\nimport { MovieEntity } from '../typings';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginTop: 40,\n      [theme.breakpoints.down('xs')]: {\n        marginTop: 20,\n      },\n    },\n    genresWrapper: {\n      marginTop: 20,\n    },\n    chip: {\n      marginRight: 10,\n      marginBottom: 10,\n    },\n  }),\n);\n\nfunction Detail({ movie }: { movie: MovieEntity }) {\n  const { root, genresWrapper, chip } = useStyles();\n\n  const overview = movie.overview && (\n    <Typography\n      gutterBottom\n      variant=\"body2\"\n      color=\"textSecondary\"\n      component=\"p\"\n    >\n      {movie.overview}\n    </Typography>\n  );\n\n  let genresComponents;\n\n  if (Array.isArray(movie.genres))\n    genresComponents = movie.genres.map((genre) => {\n      return <Chip label={genre} className={chip} key={genre} />;\n    });\n\n  const { media } = makeStyles((theme: Theme) =>\n    createStyles({\n      media: {\n        height: 600,\n        backgroundOrigin: 'center',\n        backgroundSize: 'cover',\n        backgroundImage: `url(${movie.poster_path}), url(notfound.jpg)`,\n        [theme.breakpoints.down('xs')]: {\n          height: 400,\n        },\n      },\n    }),\n  )();\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container spacing={3} className={root}>\n        <Grid item xs={12} sm={7} md={5} lg={4}>\n          <CardMedia\n            className={media}\n            title=\"Movie poster\"\n            src=\"notfound.jpg\"\n          />\n        </Grid>\n        <Grid item xs>\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\n            {movie.title}\n          </Typography>\n          {overview}\n          <Typography\n            gutterBottom\n            variant=\"body2\"\n            component=\"h4\"\n            color=\"textSecondary\"\n          >\n            Released: {movie.release_date}\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"body2\"\n            component=\"h4\"\n            color=\"textSecondary\"\n          >\n            Budget:{' '}\n            {movie.budget ? `$${movie.budgetString}` : 'Not enough information'}\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"body2\"\n            component=\"h4\"\n            color=\"textSecondary\"\n          >\n            Revenue:{' '}\n            {movie.revenue\n              ? `$${movie.revenueString}`\n              : 'Not enough information'}\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"body2\"\n            component=\"h4\"\n            color=\"textSecondary\"\n          >\n            Rating:{' '}\n            {movie.vote_average\n              ? `${movie.vote_average} / 10 (${movie.vote_count} votes)`\n              : 'Not enough votes'}\n          </Typography>\n          <div className={genresWrapper}>{genresComponents}</div>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Detail;\n","import React, { useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '..';\n\nimport Error from '../components/Error';\nimport Backdrop from '../components/CenteredBackdrop';\nimport Detail from '../components/Detail';\nimport { fetchMovie } from '../actions/actions';\n\nfunction DetailContainer() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const movieDetail = useSelector((state: RootState) => state.movieDetail);\n  useEffect(() => {\n    dispatch(fetchMovie(id));\n  }, [dispatch, id]);\n\n  if (movieDetail.isFetching || !movieDetail.data.id)\n    return <Backdrop open={true} />;\n  if (movieDetail.error) return <Error message={movieDetail.error} />;\n\n  return <Detail movie={movieDetail.data} />;\n}\n\nexport default DetailContainer;\n","import React, { useEffect } from 'react';\nimport { fetchMovies } from '../actions/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '..';\n\nfunction FetchMovies() {\n  const dispatch = useDispatch();\n  const searchInfo = useSelector((state: RootState) => state.searchInfo);\n  useEffect(() => {\n    dispatch(fetchMovies());\n  }, [dispatch, searchInfo]);\n  return <React.Fragment />;\n}\n\nexport default FetchMovies;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n});\n\nfunction Header() {\n  const { link } = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Link to=\"/\" className={link}>\n          <Typography variant=\"h6\">Movie searcher</Typography>\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createStore, applyMiddleware, Action, compose } from 'redux';\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/reducers';\n\nimport MainContainer from './containers/MainContainer';\nimport DetailContainer from './containers/DetailContainer';\nimport FetchMovies from './containers/FetchMovies';\nimport Header from './components/Header';\nimport Error from './components/Error';\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware)),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Route>\n        <Header />\n      </Route>\n      <Route>\n        <FetchMovies />\n      </Route>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainContainer />\n        </Route>\n        <Route path=\"/search/:query?\">\n          <MainContainer />\n        </Route>\n        <Route path=\"/detail/:id?\">\n          <DetailContainer />\n        </Route>\n        <Route path=\"*\">\n          <Error message=\"Page not found!\" />\n        </Route>\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}