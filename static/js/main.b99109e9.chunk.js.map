{"version":3,"sources":["actions/index.ts","actions/actionTypes.ts","components/SearchBar.tsx","containers/SearchBarContainer.tsx","components/ResultBar.tsx","components/Movie.tsx","components/LoadMoreButton.tsx","components/CenteredProgress.tsx","containers/LoadMoreButtonContainer.tsx","components/MoviesList.tsx","components/SearchBy.tsx","containers/SearchByContainer.tsx","components/SortSelect.tsx","components/SortBy.tsx","containers/SortByContainer.tsx","components/Main.tsx","components/Error.tsx","components/CenteredBackdrop.tsx","containers/MainContainer.tsx","components/Detail.tsx","containers/DetailContainer.tsx","containers/FetchMovies.tsx","components/Header.tsx","reducers/index.ts","serviceWorker.ts","index.tsx"],"names":["queryUpdate","query","type","payload","searchByUpdate","searchBy","fetchMoviesSuccess","result","fetchMovieSuccess","fetchMoviesFailure","error","fetchMovieFailure","fetchMovies","page","dispatch","getState","searchInfo","sortBy","sortOrder","pageParams","fetchUrl","fetch","then","response","json","useStyles","makeStyles","root","marginTop","textField","width","button","caption","color","textAlign","SearchBar","handleQuery","classes","useState","queryState","setQuery","Fragment","noValidate","autoComplete","onSubmit","e","preventDefault","Grid","container","spacing","className","alignItems","item","xs","sm","TextField","label","value","onChange","target","Button","variant","SearchBarContainer","useDispatch","useSelector","state","ResultBar","total","Box","Typography","display","actionArea","flexDirection","justifyContent","mainContent","link","textDecoration","genres","height","paddingLeft","paddingRight","genresWrapper","chip","marginRight","overview","overflow","title","textOverflow","whiteSpace","Movie","movie","length","substr","trim","media","backgroundSize","backgroundImage","poster_path","md","id","Card","to","CardActionArea","CardMedia","src","CardContent","gutterBottom","component","Divider","light","slice","map","genre","Chip","size","key","marginBottom","LoadMoreButton","handleClick","onClick","CenteredProgress","CircularProgress","LoadMoreButtonContainer","moviesState","movies","isFetching","data","MoviesList","theme","createStyles","breakpoints","down","SearchBy","handleSearchBy","SearchByContainer","SortSelect","items","handleValue","menuItems","Object","keys","MenuItem","FormControl","InputLabel","Select","labelId","SortBy","sortOptions","handleSortBy","handleSortOrder","sortOption","desc","asc","SortByContainer","sortByUpdate","sortOrderUpdate","controls","flexWrap","control","Main","Container","maxWidth","justify","Error","props","message","children","zIndex","backgroundColor","CenteredBackdrop","open","Backdrop","MainContainer","appState","useEffect","movieDetail","el","document","getElementById","scrollIntoView","block","cursor","tagline","fontSize","Detail","backgroundOrigin","lg","release_date","budget","budgetString","revenue","revenueString","vote_average","vote_count","Array","isArray","DetailContainer","useParams","find","fetchMovie","FetchMovies","Header","AppBar","position","Toolbar","initialMoviesState","totalPages","initialMovieState","initialSearchState","formatMoney","amount","decimalCount","decimal","thousands","Math","abs","isNaN","negativeSign","i","parseInt","Number","toFixed","toString","j","replace","rootReducer","combineReducers","action","newItems","offset","concat","ceil","Date","toLocaleDateString","year","month","day","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","exact","path","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"qQAmBaA,EAAc,WAAoC,IAAnCC,EAAkC,uDAA1B,GAClC,MAAO,CACLC,KCfwB,eDgBxBC,QAAS,CACPF,WAoCOG,EAAiB,WAEJ,IADxBC,EACuB,uDADF,QAErB,MAAO,CACLH,KCvD4B,mBDwD5BC,QAAS,CACPE,cAiBOC,EAAqB,SAACC,GACjC,MAAO,CACLL,KClFgC,uBDmFhCC,QAAS,CACPI,YAKOC,EAAoB,SAACD,GAChC,MAAO,CACLL,KC1F+B,sBD2F/BC,QAAS,CACPI,YAKOE,EAAqB,SAACC,GACjC,MAAO,CACLR,KClGgC,uBDmGhCC,QAAS,CACPO,WAKOC,EAAoB,SAACD,GAChC,MAAO,CACLR,KC1G+B,sBD2G/BC,QAAS,CACPO,WAKOE,EAAc,WAAiC,IAAhCC,EAA+B,uDAAhB,EACzC,OAAO,SAAUC,EAAUC,GACzBD,EAjDK,CACLZ,KCxE8B,uBDuHK,MAGYa,IAAWC,WAAlDf,EAH2B,EAG3BA,MAAOgB,EAHoB,EAGpBA,OAAQZ,EAHY,EAGZA,SAAUa,EAHE,EAGFA,UAC3BC,EAAU,kBAA2B,GAAZN,EAAO,GAAtB,UAAsC,GAChDO,EAAWnB,EAAK,0DACiCA,EADjC,sBACoDiB,EADpD,qBAC0Eb,EAD1E,mBAC6FY,GAD7F,OACsGE,GADtG,4DAEmCd,EAFnC,sBAEyDa,EAFzD,mBAE6ED,GAF7E,OAEsFE,GAE5G,OAAOE,MAAMD,GACVE,MACC,SAACC,GAAD,OAAcA,EAASC,UACvB,SAACd,GACCI,EAASL,EAAmBC,OAG/BY,MAAK,SAACC,GACLT,EAASR,EAAmBiB,S,0BEhI9BE,EAAYC,YAAW,CAC3BC,KAAM,CACJC,UAAW,IAEbC,UAAW,CACTC,MAAO,QAETC,OAAQ,CACND,MAAO,OACPF,UAAW,QAEbI,QAAS,CACPC,MAAO,UACPC,UAAW,WAIFC,EAAY,SAAC,GAA4C,IAA1ClC,EAAyC,EAAzCA,MAAOmC,EAAkC,EAAlCA,YAC3BC,EAAUZ,IADmD,EAEpCa,mBAASrC,GAF2B,mBAE5DsC,EAF4D,KAEhDC,EAFgD,KAGnE,OACE,kBAAC,IAAMC,SAAP,KACE,0BACEC,YAAU,EACVC,aAAa,MACbC,SAAU,SAACC,GACTA,EAAEC,iBACFV,EAAYG,KAGd,kBAACQ,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTC,UAAWb,EAAQV,KACnBwB,WAAW,YAEX,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACC,EAAA,EAAD,CACEC,MAAM,SACNC,MAAOlB,EACPW,UAAWb,EAAQR,UACnB6B,SAAU,SAACb,GACTA,EAAEC,iBACFN,EAASK,EAAEc,OAAOF,WAIxB,kBAACV,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACM,EAAA,EAAD,CACE1D,KAAK,SACL2D,QAAQ,WACR5B,MAAM,UACNiB,UAAWb,EAAQN,QAJrB,eCjDC+B,EAAqB,WAChC,IAAMhD,EAAWiD,cACX9D,EAAQ+D,aAAY,SAACC,GAAD,OAAsBA,EAAMjD,WAAWf,SACjE,OACE,kBAAC,EAAD,CACEA,MAAOA,EACPmC,YAAa,SAACnC,GAAD,OAAmBa,EAASd,EAAYC,Q,kBCNrDwB,EAAYC,YAAW,CAC3BC,KAAM,CACJC,UAAW,IAEbI,QAAS,CACPC,MAAO,aAIEiC,EAAY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAA+B,EAC/B1C,IAAlBO,EADiD,EACjDA,QAASL,EADwC,EACxCA,KACjB,OACE,kBAACyC,EAAA,EAAD,CAAKlB,UAAWvB,GACd,kBAAC0C,EAAA,EAAD,CAAYR,QAAQ,QAAQS,QAAQ,QAAQpB,UAAWlB,GAAvD,SACSmC,EADT,a,sDCLA1C,EAAYC,YAAW,CAC3B6C,WAAY,CACVD,QAAS,OACTE,cAAe,SACfC,eAAgB,cAElBC,YAAa,CACX5C,MAAO,qBAET6C,KAAM,CACJC,eAAgB,OAChB3C,MAAO,WAET4C,OAAQ,CACNP,QAAS,OACTG,eAAgB,aAChBtB,WAAY,SACZrB,MAAO,OACPgD,OAAQ,GACRC,YAAa,GACbC,aAAc,IAEhBC,cAAe,CACbnD,MAAO,QAEToD,KAAM,CACJC,YAAa,IAEfC,SAAU,CACRN,OAAQ,GACRO,SAAU,UAEZC,MAAO,CACLR,OAAQ,GACRO,SAAU,SACVE,aAAc,WACdC,WAAY,YAIHC,EAAQ,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,MAChBrD,EAAUZ,IACZ2D,EAAWM,EAAMN,SACjBA,EAASO,OAAS,MACpBP,EAAWM,EAAMN,SAASQ,OAAO,EAAG,KAAKC,OAAS,OAJM,IAKlDC,EAAUpE,YAAW,CAC3BoE,MAAO,CACLhB,OAAQ,IACRhD,MAAO,OACPiE,eAAgB,QAChBC,gBAAgB,OAAD,OAASN,EAAMO,YAAf,0BALDvE,GAAVoE,MASR,OACE,kBAAC/C,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAG4C,GAAI,EAAGC,GAAE,eAAUT,EAAMS,KACjD,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMC,GAAE,kBAAaX,EAAMS,IAAMjD,UAAWb,EAAQsC,MAClD,kBAAC2B,EAAA,EAAD,CAAgBpD,UAAWb,EAAQkC,YACjC,kBAACgC,EAAA,EAAD,CACErD,UAAW4C,EACXR,MAAM,eACNkB,IAAI,iBAEN,kBAACC,EAAA,EAAD,CAAavD,UAAWb,EAAQqC,aAC9B,kBAACL,EAAA,EAAD,CACEqC,cAAY,EACZ7C,QAAQ,KACR8C,UAAU,KACVzD,UAAWb,EAAQiD,OAElBI,EAAMJ,OAET,kBAACjB,EAAA,EAAD,CACEqC,cAAY,EACZ7C,QAAQ,QACR5B,MAAM,gBACN0E,UAAU,IACVzD,UAAWb,EAAQ+C,UAElBA,IAGL,yBAAKlC,UAAWb,EAAQ4C,eACtB,kBAAC2B,EAAA,EAAD,CAASC,OAAK,IACd,yBAAK3D,UAAWb,EAAQwC,QACrBa,EAAMb,OAAOiC,MAAM,EAAG,GAAGC,KAAI,SAACC,GAAD,OAC5B,kBAACC,EAAA,EAAD,CACEC,KAAK,QACL1D,MAAOwD,EACP9D,UAAWb,EAAQ6C,KACnBiC,IAAKH,OAGRtB,EAAMb,OAAOc,OAAS,GACrB,kBAACsB,EAAA,EAAD,CACEC,KAAK,QACL1D,MAAM,eACNN,UAAWb,EAAQ6C,KACnBiC,IAAI,wBC3GlB1F,EAAYC,YAAW,CAC3BC,KAAM,CACJ2C,QAAS,OACTG,eAAgB,SAChBtB,WAAY,SACZrB,MAAO,OACPF,UAAW,GACXwF,aAAc,MAILC,EAAiB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,YACvB3F,EAASF,IAATE,KAER,OACE,yBAAKuB,UAAWvB,GACd,kBAACiC,EAAA,EAAD,CAAQC,QAAQ,WAAW5B,MAAM,UAAUsF,QAAS,kBAAMD,MAA1D,e,SCjBA7F,EAAYC,YAAW,CAC3BC,KAAM,CACJ2C,QAAS,OACTG,eAAgB,SAChBtB,WAAY,SACZrB,MAAO,OACPF,UAAW,GACXwF,aAAc,MAILI,EAAmB,WAAO,IAC7B7F,EAASF,IAATE,KACR,OACE,yBAAKuB,UAAWvB,GACd,kBAAC8F,EAAA,EAAD,QCbOC,EAA0B,WACrC,IAAM5G,EAAWiD,cACX4D,EAAc3D,aAAY,SAACC,GAAD,OAAsBA,EAAM2D,UAC5D,OAAID,EAAYE,WAAmB,kBAAC,EAAD,MAC/BF,EAAYxD,QAAUwD,EAAYG,KAAKnC,OAAe,kBAAC,IAAMlD,SAAP,MAExD,kBAAC,EAAD,CACE6E,YAAa,kBAAMxG,EAASF,EAAY+G,EAAY9G,KAAO,QCN3DY,EAAYC,YAAW,CAC3BC,KAAM,CACJC,UAAW,MAIFmG,EAAa,SAAC,GAAgD,IAA9CH,EAA6C,EAA7CA,OACnBjG,EAASF,IAATE,KAER,OACE,kBAAC,IAAMc,SAAP,KACE,kBAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAWvB,GACpCiG,EAAOb,KAAI,SAACrB,GAAD,OACV,kBAAC,EAAD,CAAOA,MAAOA,EAAOyB,IAAKzB,EAAMS,SAGpC,kBAAC,EAAD,QCbA1E,EAAYC,aAAW,SAACsG,GAAD,OAC3BC,YAAa,CACXlG,OAAQ,CACND,MAAO,QAETzB,SAAS,aACP8E,YAAa,IACZ6C,EAAME,YAAYC,KAAK,MAAQ,CAC9BhD,YAAa,EACbiC,aAAc,UAMTgB,EAAW,SAAC,GAAiD,IAA/C/H,EAA8C,EAA9CA,SAAUgI,EAAoC,EAApCA,eAC7BhG,EAAUZ,IAEhB,OACE,kBAAC,IAAMgB,SAAP,KACE,kBAACM,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGJ,UAAWb,EAAQhC,UAC3C,kBAACuD,EAAA,EAAD,CACEC,QAAsB,UAAbxD,EAAuB,YAAc,WAC9C4B,MAAM,UACNiB,UAAWb,EAAQN,OACnBwF,QAAS,kBAAMc,EAAe,WAJhC,UASF,kBAACtF,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACM,EAAA,EAAD,CACEC,QAAsB,WAAbxD,EAAwB,YAAc,WAC/C4B,MAAM,UACNiB,UAAWb,EAAQN,OACnBwF,QAAS,kBAAMc,EAAe,YAJhC,YCpCKC,EAAoB,WAC/B,IAAMxH,EAAWiD,cACX1D,EAAW2D,aAAY,SAACC,GAAD,OAAsBA,EAAMjD,WAAWX,YACpE,OACE,kBAAC,EAAD,CACEA,SAAUA,EACVgI,eAAgB,SAAChI,GAAD,OACdS,EAASV,EAAeC,Q,uCCL1BoB,GAAYC,YAAW,CAC3BC,KAAM,CACJG,MAAO,OACPF,UAAW,MA8BA2G,OA1Bf,YAA4E,IAAtDC,EAAqD,EAArDA,MAAO/E,EAA8C,EAA9CA,MAAOgF,EAAuC,EAAvCA,YAAajF,EAA0B,EAA1BA,MACvC7B,EAASF,KAATE,KACF+G,EAAYC,OAAOC,KAAKJ,GAAOzB,KAAI,SAACI,GAExC,IAAM/D,EAAOoF,EAAMrB,GACnB,OACE,kBAAC0B,GAAA,EAAD,CAAUpF,MAAO0D,EAAKA,IAAKA,GACxB/D,MAIP,OACE,kBAAC0F,GAAA,EAAD,CAAa5F,UAAWvB,GACtB,kBAACoH,EAAA,EAAD,CAAY5C,GAAG,4BAA4B3C,GAC3C,kBAACwF,GAAA,EAAD,CACEC,QAAQ,2BACR9C,GAAG,qBACH1C,MAAOA,EACPC,SAAU,SAACb,GAAD,OAAO4F,EAAY5F,EAAEc,OAAOF,SAErCiF,KC7BHjH,GAAYC,aAAW,SAACsG,GAAD,OAC3BC,YAAa,CACXhH,OAAO,aACLkE,YAAa,IACZ6C,EAAME,YAAYC,KAAK,MAAQ,CAC9BhD,YAAa,EACbiC,aAAc,UAMT8B,GAAS,SAAC,GAMH,IALlBjI,EAKiB,EALjBA,OACAkI,EAIiB,EAJjBA,YACAjI,EAGiB,EAHjBA,UACAkI,EAEiB,EAFjBA,aACAC,EACiB,EADjBA,gBAEMhH,EAAUZ,KAEhB,OACE,kBAAC,IAAMgB,SAAP,KACE,kBAACM,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGJ,UAAWb,EAAQpB,QAC3C,kBAAC,GAAD,CACEuC,MAAM,UACNC,MAAOxC,EACPwH,YAAa,SAACa,GAAD,OACXF,EAAaE,IAEfd,MAAOW,KAGX,kBAACpG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,GAAD,CACEE,MAAM,aACNC,MAAOvC,EACPuH,YAAa,SAACvH,GAAD,OACXmI,EAAgBnI,IAElBsH,MAAO,CAAEe,KAAM,aAAcC,IAAK,kBCxC/BC,GAAkB,WAC7B,IAAM3I,EAAWiD,cACX/C,EAAagD,aAAY,SAACC,GAAD,OAAsBA,EAAMjD,cAC3D,OACE,kBAAC,GAAD,CACEC,OAAQD,EAAWC,OACnBkI,YAAanI,EAAWmI,YACxBC,aAAc,SAACnI,GAAD,OACZH,EdaoB,SAACG,GAC3B,MAAO,CACLf,KCvB0B,iBDwB1BC,QAAS,CACPc,WcjBWyI,CAAazI,KAExBC,UAAWF,EAAWE,UACtBmI,gBAAiB,SAACnI,GAAD,OACfJ,Ed6BuB,WAEF,IAD3BI,EAC0B,uDADG,OAE7B,MAAO,CACLhB,KC1C6B,oBD2C7BC,QAAS,CACPe,ccnCWyI,CAAgBzI,QCP3BO,GAAYC,aAAW,SAACsG,GAAD,OAC3BC,YAAa,CACX2B,SAAU,CACRtF,QAAS,OACTnB,WAAY,gBACZ0G,SAAU,OACVjI,UAAW,IAEbkI,QAAQ,aACNhI,MAAO,OACNkG,EAAME,YAAYC,KAAK,MAAQ,CAC9BrG,MAAO,cAMFiI,GAAO,SAAC,GAAkC,IAAhCnC,EAA+B,EAA/BA,OAAQzD,EAAuB,EAAvBA,MACvB9B,EAAUZ,KAEhB,OACE,kBAACuI,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,EAAD,MACA,yBAAK/G,UAAWb,EAAQuH,UACtB,kBAAC7G,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTC,UAAWb,EAAQyH,QACnB3G,WAAW,UAEX,kBAAC,EAAD,OAEF,kBAACJ,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTC,UAAWb,EAAQyH,QACnB3G,WAAW,SACX+G,QAAQ,YAER,kBAAC,GAAD,QAGJ,kBAAC,EAAD,CAAW/F,MAAOA,IAClB,kBAAC,EAAD,CAAYyD,OAAQA,MChDpBnG,GAAYC,YAAW,CAC3BC,KAAM,CACJ2C,QAAS,OACTG,eAAgB,SAChBtB,WAAY,SACZrB,MAAO,OACPgD,OAAQ,OAICqF,GAAQ,SAACC,GAAuB,IACnCzI,EAASF,KAATE,KACR,OACE,kBAACqI,EAAA,EAAD,CAAWC,SAAS,KAAK/G,UAAWvB,GAClC,kBAAC0C,EAAA,EAAD,CAAYR,QAAQ,KAAK8C,UAAU,KAAK1E,MAAM,iBAC3CmI,EAAMC,QACND,EAAME,Y,UCjBT7I,GAAYC,YAAW,CAC3BC,KAAM,CACJ6C,cAAe,SACf+F,OAAQ,GACRC,gBAAiB,qBAIRC,GAAmB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KACzB/I,EAASF,KAATE,KACR,OACE,kBAACgJ,GAAA,EAAD,CAAUzH,UAAWvB,EAAM+I,KAAMA,GAC/B,kBAACrG,EAAA,EAAD,CACEqC,cAAY,EACZ7C,QAAQ,QACR8C,UAAU,KACV1E,MAAM,iBAJR,cAQA,kBAACwF,EAAA,EAAD,CAAkBxF,MAAM,cCnBjB2I,GAAgB,WAC3B,IAAMC,EAAW7G,aAAY,SAACC,GAAD,OAAsBA,KAanD,OAXA6G,qBAAU,WACR,IAAM3E,EAAK0E,EAASE,YAAYjD,KAAK3B,GACrC,GAAIA,EAAI,CACN,IAAM6E,EAAKC,SAASC,eAAT,eAAgC/E,IACvC6E,GACFA,EAAGG,eAAe,CAChBC,MAAO,aAGZ,CAACP,EAASE,YAAYjD,KAAK3B,MAEzB0E,EAASjD,OAAOE,KAAK,IAAM+C,EAASjD,OAAOC,WACvC,kBAAC,GAAD,CAAkB6C,MAAM,IAE7BG,EAASjD,OAAOlH,MAAc,kBAAC,GAAD,CAAO2J,QAASQ,EAASjD,OAAOlH,QAE3D,kBAAC,GAAD,CAAMkH,OAAQiD,EAASjD,OAAOE,KAAM3D,MAAO0G,EAASjD,OAAOzD,SCd9D1C,GAAYC,aAAW,SAACsG,GAAD,OAC3BC,YAAa,CACXtG,KAAK,aACHC,UAAW,IACVoG,EAAME,YAAYC,KAAK,MAAQ,CAC9BvG,UAAW,KAGfqD,cAAe,CACbrD,UAAW,IAEbsD,KAAM,CACJC,YAAa,GACbiC,aAAc,GACdiE,OAAQ,UACR,UAAW,CACTb,gBAAiB,qBAGrBc,QAAS,CACPC,SAAU,UAEZ7E,aAAc,CACZU,aAAc,UAEhBzC,KAAM,CACJC,eAAgB,aAKT4G,GAAS,SAAC,GAAyC,IAAvC9F,EAAsC,EAAtCA,MAAOtD,EAA+B,EAA/BA,YACxBC,EAAUZ,KAERqE,EAAUpE,aAAW,SAACsG,GAAD,OAC3BC,YAAa,CACXnC,MAAM,aACJhB,OAAQ,IACR2G,iBAAkB,SAClB1F,eAAgB,QAChBC,gBAAgB,OAAD,OAASN,EAAMO,YAAf,yBACd+B,EAAME,YAAYC,KAAK,MAAQ,CAC9BrD,OAAQ,UAREpD,GAAVoE,MAcR,OACE,kBAACkE,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAClH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAWb,EAAQV,MAC7C,kBAACoB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAG4C,GAAI,EAAGwF,GAAI,GACnC,kBAACnF,EAAA,EAAD,CACErD,UAAW4C,EACXR,MAAM,eACNkB,IAAI,kBAGR,kBAACzD,EAAA,EAAD,CAAMK,MAAI,EAACC,IAAE,GACX,yBAAKH,UAAWb,EAAQqE,cACtB,kBAACrC,EAAA,EAAD,CAAYR,QAAQ,KAAK8C,UAAU,MAChCjB,EAAMJ,OAERI,EAAM4F,SACL,kBAACjH,EAAA,EAAD,CACEnB,UAAWb,EAAQiJ,QACnBzH,QAAQ,KACR5B,MAAM,gBACN0E,UAAU,MAETjB,EAAM4F,UAIZ5F,EAAMN,UACL,kBAACf,EAAA,EAAD,CACER,QAAQ,QACR5B,MAAM,gBACN0E,UAAU,IACVzD,UAAWb,EAAQqE,cAElBhB,EAAMN,UAGX,kBAACf,EAAA,EAAD,CACEqC,cAAY,EACZ7C,QAAQ,QACR8C,UAAU,KACV1E,MAAM,iBAJR,aAMayD,EAAMiG,cAEnB,kBAACtH,EAAA,EAAD,CACEqC,cAAY,EACZ7C,QAAQ,QACR8C,UAAU,KACV1E,MAAM,iBAJR,UAMU,IACPyD,EAAMkG,OAAN,WAAmBlG,EAAMmG,cAAiB,0BAE7C,kBAACxH,EAAA,EAAD,CACEqC,cAAY,EACZ7C,QAAQ,QACR8C,UAAU,KACV1E,MAAM,iBAJR,WAMW,IACRyD,EAAMoG,QAAN,WACOpG,EAAMqG,eACV,0BAEN,kBAAC1H,EAAA,EAAD,CACEqC,cAAY,EACZ7C,QAAQ,QACR8C,UAAU,KACV1E,MAAM,iBAJR,UAMU,IACPyD,EAAMsG,aAAN,UACMtG,EAAMsG,aADZ,kBACkCtG,EAAMuG,WADxC,WAEG,oBAEN,yBAAK/I,UAAWb,EAAQ4C,eACrBiH,MAAMC,QAAQzG,EAAMb,SACnBa,EAAMb,OAAOkC,KAAI,SAACC,GAAD,OACf,kBAAC,IAAD,CACEX,GAAG,IACHkB,QAAS,kBAAMnF,EAAY4E,IAC3BG,IAAKH,EACL9D,UAAWb,EAAQsC,MAEnB,kBAACsC,EAAA,EAAD,CAAMzD,MAAOwD,EAAO9D,UAAWb,EAAQ6C,gBCrI5CkH,GAAkB,WAAO,IAC5BjG,EAAOkG,cAAPlG,GACFrF,EAAWiD,cACXgH,EAAc/G,aAAY,SAACC,GAAD,OAAsBA,EAAM8G,eAW5D,OATAD,qBAAU,WACRhK,EpB4HsB,SAACqF,GACzB,OAAO,SAAUrF,EAAUC,GACzB,IAAKoF,EAAI,OAAOrF,EAASH,EAAkB,sBAC3C,GAAII,IAAWgK,YAAYjD,KAAK3B,KAAOA,EAAI,OAAO,EAElDrF,EArEK,CACLZ,KC7E6B,sBDmJ7B,IAAMwF,EAAQ3E,IAAW6G,OAAOE,KAAKwE,MAAK,SAAClJ,GACzC,OAAI+C,IAAO/C,EAAK+C,MAGlB,GAAIT,EAAO,OAAO5E,EAASN,EAAkBkF,IAE7C,IAAMtE,EAAQ,mDAA+C+E,GAC7D,OAAO9E,MAAMD,GACVE,MACC,SAACC,GAAD,OAAcA,EAASC,UACvB,SAACd,GACCI,EAASH,EAAkBD,OAG9BY,MAAK,SAACC,GACLT,EAASN,EAAkBe,QoBlJtBgL,EAAYpG,MACpB,CAACrF,EAAUqF,IAEd2E,qBAAU,WACJC,EAAYjD,KAAKxC,QAAUyF,EAAYlD,aACzCoD,SAAS3F,MAAQyF,EAAYjD,KAAKxC,SACnC,CAACyF,EAAYjD,KAAKxC,MAAOyF,EAAYlD,aAEpCkD,EAAYlD,aAAekD,EAAYjD,KAAK3B,GACvC,kBAAC,GAAD,CAAkBuE,MAAM,IAC7BK,EAAYrK,MAAc,kBAAC,GAAD,CAAO2J,QAASU,EAAYrK,QAGxD,kBAAC,GAAD,CACEgF,MAAOqF,EAAYjD,KACnB1F,YAAa,SAACnC,GAEZ,OADAa,EAASV,EAAe,WACjBU,EAASd,EAAYC,QC7BvBuM,GAAc,WACzB,IAAM1L,EAAWiD,cACX/C,EAAagD,aAAY,SAACC,GAAD,OAAsBA,EAAMjD,cAM3D,OAJA8J,qBAAU,WACRhK,EAASF,OACR,CAACE,EAAUE,IAEP,kBAAC,IAAMyB,SAAP,O,oBCLHhB,GAAYC,YAAW,CAC3BiD,KAAM,CACJC,eAAgB,OAChB3C,MAAO,aAIEwK,GAAS,WAAO,IACnB9H,EAASlD,KAATkD,KACR,OACE,kBAAC+H,GAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,GAAA,EAAD,KACE,kBAAC,IAAD,CAAMvG,GAAG,IAAInD,UAAWyB,GACtB,kBAACN,EAAA,EAAD,CAAYR,QAAQ,MAApB,sB,SCVJgJ,GAAqB,CACzBhF,YAAY,EACZ1D,MAAO,EACPtD,KAAM,EACNiM,WAAY,EACZhF,KAAM,GACNpH,OAAO,GAGHqM,GAAoB,CACxBlF,YAAY,EACZnH,OAAO,EACPoH,KAAM,IAGFkF,GAAqB,CACzB/M,MAAO,GACPgB,OAAQ,eACRkI,YAAa,CACXhD,GAAI,KACJb,MAAO,QACP2G,WAAY,cACZD,aAAc,SACdL,aAAc,eACdC,OAAQ,SACRE,QAAS,WAEX5K,UAAW,OACXb,SAAU,SAIZ,SAAS4M,GACPC,GAIC,IAHDC,EAGA,uDAHe,EACfC,EAEA,uDAFU,IACVC,EACA,uDADY,IAEZF,EAAeG,KAAKC,IAAIJ,GACxBA,EAAeK,MAAML,GAAgB,EAAIA,EAEzC,IAAMM,EAAeP,EAAS,EAAI,IAAM,GAEpCQ,EAAIC,SACLT,EAASI,KAAKC,IAAIK,OAAOV,IAAW,GAAGW,QAAQV,IAChDW,WACEC,EAAIL,EAAE/H,OAAS,EAAI+H,EAAE/H,OAAS,EAAI,EAEtC,OACE8H,GACCM,EAAIL,EAAE9H,OAAO,EAAGmI,GAAKV,EAAY,IAClCK,EAAE9H,OAAOmI,GAAGC,QAAQ,iBAAkB,KAAOX,IAC5CF,EACGC,EACAE,KAAKC,KAAKL,GAAUQ,GACjBG,QAAQV,GACRrG,MAAM,GACT,IAIR,IAmGamH,GAAcC,YAAgB,CACzCtG,OApGa,WAGI,IAFjB3D,EAEgB,uDAFR4I,GACRsB,EACgB,uCAChB,OAAQA,EAAOjO,MACb,ItB7E8B,qBsB8E5B,OAAO,6BAAK+D,GAAZ,IAAmB4D,YAAY,IACjC,ItB7EgC,uBsB8E9B,IAAIuG,EAAWD,EAAOhO,QAAQI,OAAOuH,KAIrC,OAHIqG,EAAOhO,QAAQI,OAAO8N,OAAS,IACjCD,EAAWnK,EAAM6D,KAAKwG,OAAOH,EAAOhO,QAAQI,OAAOuH,OAE9C,6BACF7D,GADL,IAEE4D,YAAY,EACZ1D,MAAOgK,EAAOhO,QAAQI,OAAO4D,MAC7BtD,KAAMyM,KAAKiB,KAAKH,EAASzI,OAAS,GAClCmH,WAAYQ,KAAKiB,KAAKJ,EAAOhO,QAAQI,OAAO4D,MAAQ,GACpD2D,KAAMsG,IAEV,ItBxFgC,uBsByF9B,OAAO,6BAAKnK,GAAZ,IAAmB4D,YAAY,EAAOnH,MAAOyN,EAAOhO,QAAQO,QAC9D,QACE,OAAOuD,IA8EXjD,WArCiB,WAGA,IAFjBiD,EAEgB,uDAFR+I,GACRmB,EACgB,uCAChB,OAAQA,EAAOjO,MACb,ItBvIwB,esBwItB,OAAO,6BACF+D,GADL,IAEEhE,MAAOkO,EAAOhO,QAAQF,QAE1B,ItB1I4B,mBsB2I1B,OAAO,6BACFgE,GADL,IAEE5D,SAAU8N,EAAOhO,QAAQE,WAE7B,ItBhJ0B,iBsBiJxB,OAAO,6BACF4D,GADL,IAEEhD,OAAQkN,EAAOhO,QAAQc,SAE3B,ItBnJ+B,sBsBoJ7B,OAAO,6BACFgD,GADL,IAEEkF,YAAagF,EAAOhO,QAAQgJ,cAEhC,ItBvJ6B,oBsBwJ3B,OAAO,6BACFlF,GADL,IAEE/C,UAAWiN,EAAOhO,QAAQe,YAE9B,QACE,OAAO+C,IAOX8G,YA3EkB,WAGF,IAFhB9G,EAEe,uDAFP8I,GACRoB,EACe,uCACf,OAAQA,EAAOjO,MACb,ItBvG6B,oBsBwG3B,OAAO,6BAAK+D,GAAZ,IAAmB4D,YAAY,EAAMnH,OAAO,IAC9C,ItBvG+B,sBsBwG7B,IAAMgF,EAAK,gBAAQyI,EAAOhO,QAAQI,QAClC,OAAKmF,EAAMS,IAMXT,EAAMiG,aAAe,IAAI6C,KAAK9I,EAAMiG,cAAc8C,mBAChD,QACA,CACEC,KAAM,UACNC,MAAO,OACPC,IAAK,YAGTlJ,EAAMmG,aAAeoB,GAAYvH,EAAMkG,QACvClG,EAAMqG,cAAgBkB,GAAYvH,EAAMoG,SACjC,6BACF7H,GADL,IAEE4D,YAAY,EACZC,KAAK,gBAAMpC,MAlBJ,6BACFzB,GADL,IAEE4D,YAAY,EACZnH,MAAO,uCAiBb,ItB5H+B,sBsB6H7B,OAAO,6BAAKuD,GAAZ,IAAmB4D,YAAY,EAAOnH,MAAOyN,EAAOhO,QAAQO,QAC9D,QACE,OAAOuD,MCxHO4K,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCCN,IAAMC,GAAmBJ,OAAOK,sCAAwCC,IAElEC,GAAQC,YACZrB,GACAiB,GAAiBK,YAAgBC,OAGnCC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,KAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,gBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,GAAD,CAAOvF,QAAQ,wBAKvBY,SAASC,eAAe,SD6FpB,kBAAmB2E,WACrBA,UAAUC,cAAcC,MACrBzO,MAAK,SAAA0O,GACJA,EAAaC,gBAEdC,OAAM,SAAAxP,GACLyP,QAAQzP,MAAMA,EAAM2J,c","file":"static/js/main.b99109e9.chunk.js","sourcesContent":["import * as ActionTypes from './actionTypes';\nimport {\n  QueryUpdateAction,\n  MovieActionStart,\n  MovieActionSuccess,\n  MovieActionFailure,\n  MoviesActionSuccess,\n  Movies,\n  MovieEntity,\n  SortUpdateAction,\n  SearchUpdateAction,\n  SortOptionsUpdateAction,\n  SortOrderUpdateAction,\n  SortOptions,\n  AppThunk,\n  SortOrder,\n  SearchBy,\n} from '../typings';\n\nexport const queryUpdate = (query = ''): QueryUpdateAction => {\n  return {\n    type: ActionTypes.QUERY_UPDATE,\n    payload: {\n      query,\n    },\n  };\n};\n\nexport const sortByUpdate = (sortBy: keyof SortOptions): SortUpdateAction => {\n  return {\n    type: ActionTypes.SORT_BY_UPDATE,\n    payload: {\n      sortBy,\n    },\n  };\n};\n\nexport const sortOptionsUpdate = (\n  sortOptions: SortOptions,\n): SortOptionsUpdateAction => {\n  return {\n    type: ActionTypes.SORT_OPTIONS_UPDATE,\n    payload: {\n      sortOptions,\n    },\n  };\n};\n\nexport const sortOrderUpdate = (\n  sortOrder: keyof SortOrder = 'desc',\n): SortOrderUpdateAction => {\n  return {\n    type: ActionTypes.SORT_ORDER_UPDATE,\n    payload: {\n      sortOrder,\n    },\n  };\n};\n\nexport const searchByUpdate = (\n  searchBy: SearchBy = 'title',\n): SearchUpdateAction => {\n  return {\n    type: ActionTypes.SEARCH_BY_UPDATE,\n    payload: {\n      searchBy,\n    },\n  };\n};\n\nexport const fetchMoviesStart = (): MovieActionStart => {\n  return {\n    type: ActionTypes.FETCH_MOVIES_START,\n  };\n};\n\nexport const fetchMovieStart = (): MovieActionStart => {\n  return {\n    type: ActionTypes.FETCH_MOVIE_START,\n  };\n};\n\nexport const fetchMoviesSuccess = (result: Movies): MoviesActionSuccess => {\n  return {\n    type: ActionTypes.FETCH_MOVIES_SUCCESS,\n    payload: {\n      result,\n    },\n  };\n};\n\nexport const fetchMovieSuccess = (result: MovieEntity): MovieActionSuccess => {\n  return {\n    type: ActionTypes.FETCH_MOVIE_SUCCESS,\n    payload: {\n      result,\n    },\n  };\n};\n\nexport const fetchMoviesFailure = (error: string): MovieActionFailure => {\n  return {\n    type: ActionTypes.FETCH_MOVIES_FAILURE,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const fetchMovieFailure = (error: string): MovieActionFailure => {\n  return {\n    type: ActionTypes.FETCH_MOVIE_FAILURE,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const fetchMovies = (page: number = 1): AppThunk => {\n  return function (dispatch, getState) {\n    dispatch(fetchMoviesStart());\n\n    const { query, sortBy, searchBy, sortOrder } = getState().searchInfo;\n    const pageParams = `&offset=${(page - 1) * 9}&limit=${9}`;\n    const fetchUrl = query\n      ? `https://reactjs-cdp.herokuapp.com/movies?search=${query}&sortOrder=${sortOrder}&searchBy=${searchBy}&sortBy=${sortBy}${pageParams}`\n      : `https://reactjs-cdp.herokuapp.com/movies?searchBy=${searchBy}&sortOrder=${sortOrder}&sortBy=${sortBy}${pageParams}`;\n\n    return fetch(fetchUrl)\n      .then(\n        (response) => response.json(),\n        (error) => {\n          dispatch(fetchMoviesFailure(error));\n        },\n      )\n      .then((response) => {\n        dispatch(fetchMoviesSuccess(response));\n      });\n  };\n};\n\nexport const fetchMovie = (id: number): AppThunk => {\n  return function (dispatch, getState) {\n    if (!id) return dispatch(fetchMovieFailure('ID not specified!'));\n    if (getState().movieDetail.data.id === id) return false;\n\n    dispatch(fetchMovieStart());\n\n    const movie = getState().movies.data.find((item: MovieEntity) => {\n      if (id === item.id) return true;\n      return false;\n    });\n    if (movie) return dispatch(fetchMovieSuccess(movie));\n\n    const fetchUrl = `https://reactjs-cdp.herokuapp.com/movies/${id}`;\n    return fetch(fetchUrl)\n      .then(\n        (response) => response.json(),\n        (error) => {\n          dispatch(fetchMovieFailure(error));\n        },\n      )\n      .then((response) => {\n        dispatch(fetchMovieSuccess(response));\n      });\n  };\n};\n","export const FETCH_MOVIES_START = 'FETCH_MOVIES_START';\nexport const FETCH_MOVIE_START = 'FETCH_MOVIE_START';\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\nexport const FETCH_MOVIE_SUCCESS = 'FETCH_MOVIE_SUCCESS';\nexport const FETCH_MOVIES_FAILURE = 'FETCH_MOVIES_FAILURE';\nexport const FETCH_MOVIE_FAILURE = 'FETCH_MOVIE_FAILURE';\nexport const QUERY_UPDATE = 'QUERY_UPDATE';\nexport const SORT_BY_UPDATE = 'SORT_BY_UPDATE';\nexport const SEARCH_BY_UPDATE = 'SEARCH_BY_UPDATE';\nexport const SORT_OPTIONS_UPDATE = 'SORT_OPTIONS_UPDATE';\nexport const SORT_ORDER_UPDATE = 'SORT_ORDER_UPDATE';\n","import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { SearchBarProps } from '../typings';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 30,\n  },\n  textField: {\n    width: '100%',\n  },\n  button: {\n    width: '100%',\n    marginTop: 'auto',\n  },\n  caption: {\n    color: '#424242',\n    textAlign: 'right',\n  },\n});\n\nexport const SearchBar = ({ query, handleQuery }: SearchBarProps) => {\n  const classes = useStyles();\n  const [queryState, setQuery] = useState(query);\n  return (\n    <React.Fragment>\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleQuery(queryState);\n        }}\n      >\n        <Grid\n          container\n          spacing={3}\n          className={classes.root}\n          alignItems=\"flex-end\"\n        >\n          <Grid item xs={8} sm={9}>\n            <TextField\n              label=\"Search\"\n              value={queryState}\n              className={classes.textField}\n              onChange={(e) => {\n                e.preventDefault();\n                setQuery(e.target.value);\n              }}\n            />\n          </Grid>\n          <Grid item xs={4} sm={3}>\n            <Button\n              type=\"submit\"\n              variant=\"outlined\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Search\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { queryUpdate } from '../actions';\nimport { SearchBar } from '../components/SearchBar';\nimport { RootState } from '../typings';\n\nexport const SearchBarContainer = () => {\n  const dispatch = useDispatch();\n  const query = useSelector((state: RootState) => state.searchInfo.query);\n  return (\n    <SearchBar\n      query={query}\n      handleQuery={(query: string) => dispatch(queryUpdate(query))}\n    />\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 20,\n  },\n  caption: {\n    color: '#424242',\n  },\n});\n\nexport const ResultBar = ({ total }: { total: number }) => {\n  const { caption, root } = useStyles();\n  return (\n    <Box className={root}>\n      <Typography variant=\"body1\" display=\"block\" className={caption}>\n        Found {total} movies\n      </Typography>\n    </Box>\n  );\n};\n","import React from 'react';\n\nimport { MovieEntity } from '../typings';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles({\n  actionArea: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n  },\n  mainContent: {\n    width: 'calc(100% - 32px)',\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n  genres: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    width: '100%',\n    height: 50,\n    paddingLeft: 16,\n    paddingRight: 16,\n  },\n  genresWrapper: {\n    width: '100%',\n  },\n  chip: {\n    marginRight: 10,\n  },\n  overview: {\n    height: 75,\n    overflow: 'hidden',\n  },\n  title: {\n    height: 35,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n});\n\nexport const Movie = ({ movie }: { movie: MovieEntity }) => {\n  const classes = useStyles();\n  let overview = movie.overview;\n  if (overview.length > 150)\n    overview = movie.overview.substr(0, 150).trim() + '...';\n  const { media } = makeStyles({\n    media: {\n      height: 450,\n      width: '100%',\n      backgroundSize: 'cover',\n      backgroundImage: `url(${movie.poster_path}), url(notfound.jpg)`,\n    },\n  })();\n\n  return (\n    <Grid item xs={12} sm={6} md={4} id={`item_${movie.id}`}>\n      <Card>\n        <Link to={`/detail/${movie.id}`} className={classes.link}>\n          <CardActionArea className={classes.actionArea}>\n            <CardMedia\n              className={media}\n              title=\"Movie poster\"\n              src=\"notfound.jpg\"\n            />\n            <CardContent className={classes.mainContent}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"h2\"\n                className={classes.title}\n              >\n                {movie.title}\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"p\"\n                className={classes.overview}\n              >\n                {overview}\n              </Typography>\n            </CardContent>\n            <div className={classes.genresWrapper}>\n              <Divider light />\n              <div className={classes.genres}>\n                {movie.genres.slice(0, 3).map((genre) => (\n                  <Chip\n                    size=\"small\"\n                    label={genre}\n                    className={classes.chip}\n                    key={genre}\n                  />\n                ))}\n                {movie.genres.length > 3 && (\n                  <Chip\n                    size=\"small\"\n                    label=\"···\"\n                    className={classes.chip}\n                    key=\"···\"\n                  />\n                )}\n              </div>\n            </div>\n          </CardActionArea>\n        </Link>\n      </Card>\n    </Grid>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport { LoadMoreButtonProps } from '../typings';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    marginTop: 30,\n    marginBottom: 30,\n  },\n});\n\nexport const LoadMoreButton = ({ handleClick }: LoadMoreButtonProps) => {\n  const { root } = useStyles();\n\n  return (\n    <div className={root}>\n      <Button variant=\"outlined\" color=\"primary\" onClick={() => handleClick()}>\n        Load more\n      </Button>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    marginTop: 30,\n    marginBottom: 30,\n  },\n});\n\nexport const CenteredProgress = () => {\n  const { root } = useStyles();\n  return (\n    <div className={root}>\n      <CircularProgress />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LoadMoreButton } from '../components/LoadMoreButton';\nimport { RootState } from '../typings';\nimport { fetchMovies } from '../actions';\nimport { CenteredProgress } from '../components/CenteredProgress';\n\nexport const LoadMoreButtonContainer = () => {\n  const dispatch = useDispatch();\n  const moviesState = useSelector((state: RootState) => state.movies);\n  if (moviesState.isFetching) return <CenteredProgress />;\n  if (moviesState.total === moviesState.data.length) return <React.Fragment />;\n  return (\n    <LoadMoreButton\n      handleClick={() => dispatch(fetchMovies(moviesState.page + 1))}\n    />\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport { Movie } from './Movie';\nimport { MovieEntity } from '../typings';\nimport { LoadMoreButtonContainer } from '../containers/LoadMoreButtonContainer';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 40,\n  },\n});\n\nexport const MoviesList = ({ movies }: { movies: Array<MovieEntity> }) => {\n  const { root } = useStyles();\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={3} className={root}>\n        {movies.map((movie) => (\n          <Movie movie={movie} key={movie.id} />\n        ))}\n      </Grid>\n      <LoadMoreButtonContainer />\n    </React.Fragment>\n  );\n};\n","import React from 'react';\n\nimport {\n  Grid,\n  createStyles,\n  Theme,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\n\nimport { SearchByProps } from '../typings';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      width: '100%',\n    },\n    searchBy: {\n      marginRight: 20,\n      [theme.breakpoints.down('xs')]: {\n        marginRight: 0,\n        marginBottom: 20,\n      },\n    },\n  }),\n);\n\nexport const SearchBy = ({ searchBy, handleSearchBy }: SearchByProps) => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={4} className={classes.searchBy}>\n        <Button\n          variant={searchBy === 'title' ? 'contained' : 'outlined'}\n          color=\"primary\"\n          className={classes.button}\n          onClick={() => handleSearchBy('title')}\n        >\n          Title\n        </Button>\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <Button\n          variant={searchBy === 'genres' ? 'contained' : 'outlined'}\n          color=\"primary\"\n          className={classes.button}\n          onClick={() => handleSearchBy('genres')}\n        >\n          Genre\n        </Button>\n      </Grid>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchByUpdate } from '../actions';\nimport { SearchBy } from '../components/SearchBy';\nimport { RootState, SearchBy as SearchByType } from '../typings';\n\nexport const SearchByContainer = () => {\n  const dispatch = useDispatch();\n  const searchBy = useSelector((state: RootState) => state.searchInfo.searchBy);\n  return (\n    <SearchBy\n      searchBy={searchBy}\n      handleSearchBy={(searchBy: SearchByType) =>\n        dispatch(searchByUpdate(searchBy))\n      }\n    />\n  );\n};\n","import React from 'react';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SortSelectProps } from '../typings';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    marginTop: 20,\n  },\n});\n\nfunction SortSelect({ items, value, handleValue, label }: SortSelectProps) {\n  const { root } = useStyles();\n  const menuItems = Object.keys(items).map((key) => {\n    //@ts-ignore\n    const item = items[key];\n    return (\n      <MenuItem value={key} key={key}>\n        {item}\n      </MenuItem>\n    );\n  });\n  return (\n    <FormControl className={root}>\n      <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={value}\n        onChange={(e) => handleValue(e.target.value)}\n      >\n        {menuItems}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default SortSelect;\n","import React from 'react';\n\nimport { Grid, createStyles, Theme, makeStyles } from '@material-ui/core';\n\nimport SortSelect from './SortSelect';\nimport { SortOptions, SortByProps, SortOrder } from '../typings';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    sortBy: {\n      marginRight: 20,\n      [theme.breakpoints.down('xs')]: {\n        marginRight: 0,\n        marginBottom: 20,\n      },\n    },\n  }),\n);\n\nexport const SortBy = ({\n  sortBy,\n  sortOptions,\n  sortOrder,\n  handleSortBy,\n  handleSortOrder,\n}: SortByProps) => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={4} className={classes.sortBy}>\n        <SortSelect\n          label=\"Sort by\"\n          value={sortBy}\n          handleValue={(sortOption: keyof SortOptions) =>\n            handleSortBy(sortOption)\n          }\n          items={sortOptions}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <SortSelect\n          label=\"Sort order\"\n          value={sortOrder}\n          handleValue={(sortOrder: keyof SortOrder) =>\n            handleSortOrder(sortOrder)\n          }\n          items={{ desc: 'Descending', asc: 'Ascending' }}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sortByUpdate, sortOrderUpdate } from '../actions';\nimport { SortBy } from '../components/SortBy';\nimport { SortOptions, RootState, SortOrder } from '../typings';\n\nexport const SortByContainer = () => {\n  const dispatch = useDispatch();\n  const searchInfo = useSelector((state: RootState) => state.searchInfo);\n  return (\n    <SortBy\n      sortBy={searchInfo.sortBy}\n      sortOptions={searchInfo.sortOptions}\n      handleSortBy={(sortBy: keyof SortOptions) =>\n        dispatch(sortByUpdate(sortBy))\n      }\n      sortOrder={searchInfo.sortOrder}\n      handleSortOrder={(sortOrder: keyof SortOrder) =>\n        dispatch(sortOrderUpdate(sortOrder))\n      }\n    />\n  );\n};\n","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport { Grid, createStyles, Theme, makeStyles } from '@material-ui/core';\n\nimport { SearchBarContainer } from '../containers/SearchBarContainer';\nimport { ResultBar } from './ResultBar';\nimport { MoviesList } from './MoviesList';\nimport { MainProps } from '../typings';\nimport { SearchByContainer } from '../containers/SearchByContainer';\nimport { SortByContainer } from '../containers/SortByContainer';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    controls: {\n      display: 'flex',\n      alignItems: 'space-between',\n      flexWrap: 'wrap',\n      marginTop: 20,\n    },\n    control: {\n      width: '49%',\n      [theme.breakpoints.down('xs')]: {\n        width: '100%',\n      },\n    },\n  }),\n);\n\nexport const Main = ({ movies, total }: MainProps) => {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"lg\">\n      <SearchBarContainer />\n      <div className={classes.controls}>\n        <Grid\n          container\n          spacing={0}\n          className={classes.control}\n          alignItems=\"center\"\n        >\n          <SearchByContainer />\n        </Grid>\n        <Grid\n          container\n          spacing={0}\n          className={classes.control}\n          alignItems=\"center\"\n          justify=\"flex-end\"\n        >\n          <SortByContainer />\n        </Grid>\n      </div>\n      <ResultBar total={total} />\n      <MoviesList movies={movies} />\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ErrorProps } from '../typings';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: 300,\n  },\n});\n\nexport const Error = (props: ErrorProps) => {\n  const { root } = useStyles();\n  return (\n    <Container maxWidth=\"lg\" className={root}>\n      <Typography variant=\"h5\" component=\"h1\" color=\"textSecondary\">\n        {props.message}\n        {props.children}\n      </Typography>\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Backdrop, CircularProgress, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    flexDirection: 'column',\n    zIndex: 10,\n    backgroundColor: 'rgba(0,0,0,0.1)',\n  },\n});\n\nexport const CenteredBackdrop = ({ open }: { open: boolean }) => {\n  const { root } = useStyles();\n  return (\n    <Backdrop className={root} open={open}>\n      <Typography\n        gutterBottom\n        variant=\"body1\"\n        component=\"h3\"\n        color=\"textSecondary\"\n      >\n        Loading...\n      </Typography>\n      <CircularProgress color=\"primary\" />\n    </Backdrop>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../typings';\nimport { Main } from '../components/Main';\nimport { Error } from '../components/Error';\nimport { CenteredBackdrop } from '../components/CenteredBackdrop';\n\nexport const MainContainer = () => {\n  const appState = useSelector((state: RootState) => state);\n\n  useEffect(() => {\n    const id = appState.movieDetail.data.id;\n    if (id) {\n      const el = document.getElementById(`item_${id}`);\n      if (el)\n        el.scrollIntoView({\n          block: 'start',\n        });\n    }\n  }, [appState.movieDetail.data.id]);\n\n  if (!appState.movies.data[0] && appState.movies.isFetching)\n    return <CenteredBackdrop open={true} />;\n\n  if (appState.movies.error) return <Error message={appState.movies.error} />;\n\n  return <Main movies={appState.movies.data} total={appState.movies.total} />;\n};\n","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\n\nimport { CardMedia, Theme, createStyles } from '@material-ui/core';\nimport { DetailProps } from '../typings';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginTop: 40,\n      [theme.breakpoints.down('xs')]: {\n        marginTop: 20,\n      },\n    },\n    genresWrapper: {\n      marginTop: 20,\n    },\n    chip: {\n      marginRight: 10,\n      marginBottom: 10,\n      cursor: 'pointer',\n      '&:hover': {\n        backgroundColor: 'rgb(210,210,210)',\n      },\n    },\n    tagline: {\n      fontSize: '1.2rem',\n    },\n    gutterBottom: {\n      marginBottom: '0.5rem',\n    },\n    link: {\n      textDecoration: 'none',\n    },\n  }),\n);\n\nexport const Detail = ({ movie, handleQuery }: DetailProps) => {\n  const classes = useStyles();\n\n  const { media } = makeStyles((theme: Theme) =>\n    createStyles({\n      media: {\n        height: 600,\n        backgroundOrigin: 'center',\n        backgroundSize: 'cover',\n        backgroundImage: `url(${movie.poster_path}), url(notfound.jpg)`,\n        [theme.breakpoints.down('xs')]: {\n          height: 400,\n        },\n      },\n    }),\n  )();\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container spacing={3} className={classes.root}>\n        <Grid item xs={12} sm={7} md={5} lg={4}>\n          <CardMedia\n            className={media}\n            title=\"Movie poster\"\n            src=\"notfound.jpg\"\n          />\n        </Grid>\n        <Grid item xs>\n          <div className={classes.gutterBottom}>\n            <Typography variant=\"h4\" component=\"h1\">\n              {movie.title}\n            </Typography>\n            {movie.tagline && (\n              <Typography\n                className={classes.tagline}\n                variant=\"h6\"\n                color=\"textSecondary\"\n                component=\"h2\"\n              >\n                {movie.tagline}\n              </Typography>\n            )}\n          </div>\n          {movie.overview && (\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={classes.gutterBottom}\n            >\n              {movie.overview}\n            </Typography>\n          )}\n          <Typography\n            gutterBottom\n            variant=\"body2\"\n            component=\"h4\"\n            color=\"textSecondary\"\n          >\n            Released: {movie.release_date}\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"body2\"\n            component=\"h4\"\n            color=\"textSecondary\"\n          >\n            Budget:{' '}\n            {movie.budget ? `$${movie.budgetString}` : 'Not enough information'}\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"body2\"\n            component=\"h4\"\n            color=\"textSecondary\"\n          >\n            Revenue:{' '}\n            {movie.revenue\n              ? `$${movie.revenueString}`\n              : 'Not enough information'}\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"body2\"\n            component=\"h4\"\n            color=\"textSecondary\"\n          >\n            Rating:{' '}\n            {movie.vote_average\n              ? `${movie.vote_average} / 10 (${movie.vote_count} votes)`\n              : 'Not enough votes'}\n          </Typography>\n          <div className={classes.genresWrapper}>\n            {Array.isArray(movie.genres) &&\n              movie.genres.map((genre) => (\n                <Link\n                  to=\"/\"\n                  onClick={() => handleQuery(genre)}\n                  key={genre}\n                  className={classes.link}\n                >\n                  <Chip label={genre} className={classes.chip} />\n                </Link>\n              ))}\n          </div>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Detail;\n","import React, { useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Error } from '../components/Error';\nimport { CenteredBackdrop } from '../components/CenteredBackdrop';\nimport { Detail } from '../components/Detail';\nimport { fetchMovie, queryUpdate, searchByUpdate } from '../actions';\nimport { RootState } from '../typings';\n\nexport const DetailContainer = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const movieDetail = useSelector((state: RootState) => state.movieDetail);\n\n  useEffect(() => {\n    dispatch(fetchMovie(+id));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    if (movieDetail.data.title && !movieDetail.isFetching)\n      document.title = movieDetail.data.title;\n  }, [movieDetail.data.title, movieDetail.isFetching]);\n\n  if (movieDetail.isFetching || !movieDetail.data.id)\n    return <CenteredBackdrop open={true} />;\n  if (movieDetail.error) return <Error message={movieDetail.error} />;\n\n  return (\n    <Detail\n      movie={movieDetail.data}\n      handleQuery={(query: string) => {\n        dispatch(searchByUpdate('genres'));\n        return dispatch(queryUpdate(query));\n      }}\n    />\n  );\n};\n","import React, { useEffect } from 'react';\nimport { fetchMovies } from '../actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../typings';\n\nexport const FetchMovies = () => {\n  const dispatch = useDispatch();\n  const searchInfo = useSelector((state: RootState) => state.searchInfo);\n\n  useEffect(() => {\n    dispatch(fetchMovies());\n  }, [dispatch, searchInfo]);\n\n  return <React.Fragment />;\n};\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n});\n\nexport const Header = () => {\n  const { link } = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Link to=\"/\" className={link}>\n          <Typography variant=\"h6\">Movie searcher</Typography>\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import { combineReducers } from 'redux';\nimport * as ActionTypes from '../actions/actionTypes';\nimport {\n  MovieAction,\n  MoviesState,\n  MovieState,\n  MoviesAction,\n  SearchAction,\n  SearchState,\n} from '../typings';\n\nconst initialMoviesState = {\n  isFetching: false,\n  total: 0,\n  page: 0,\n  totalPages: 0,\n  data: [],\n  error: false,\n} as MoviesState;\n\nconst initialMovieState = {\n  isFetching: false,\n  error: false,\n  data: {},\n} as MovieState;\n\nconst initialSearchState = {\n  query: '',\n  sortBy: 'release_date',\n  sortOptions: {\n    id: 'ID',\n    title: 'Title',\n    vote_count: 'Total votes',\n    vote_average: 'Rating',\n    release_date: 'Release date',\n    budget: 'Budget',\n    revenue: 'Revenue',\n  },\n  sortOrder: 'desc',\n  searchBy: 'title',\n} as SearchState;\n\n//с просторов интернета\nfunction formatMoney(\n  amount: number | string,\n  decimalCount = 0,\n  decimal = '.',\n  thousands = ',',\n) {\n  decimalCount = Math.abs(decimalCount);\n  decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n  const negativeSign = amount < 0 ? '-' : '';\n\n  let i = parseInt(\n    (amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)),\n  ).toString();\n  let j = i.length > 3 ? i.length % 3 : 0;\n\n  return (\n    negativeSign +\n    (j ? i.substr(0, j) + thousands : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousands) +\n    (decimalCount\n      ? decimal +\n        Math.abs(+amount - +i)\n          .toFixed(decimalCount)\n          .slice(2)\n      : '')\n  );\n}\n\nconst movies = (\n  state = initialMoviesState,\n  action: MoviesAction,\n): MoviesState => {\n  switch (action.type) {\n    case ActionTypes.FETCH_MOVIES_START:\n      return { ...state, isFetching: true };\n    case ActionTypes.FETCH_MOVIES_SUCCESS:\n      let newItems = action.payload.result.data;\n      if (action.payload.result.offset > 1) {\n        newItems = state.data.concat(action.payload.result.data);\n      }\n      return {\n        ...state,\n        isFetching: false,\n        total: action.payload.result.total,\n        page: Math.ceil(newItems.length / 9),\n        totalPages: Math.ceil(action.payload.result.total / 9),\n        data: newItems,\n      };\n    case ActionTypes.FETCH_MOVIES_FAILURE:\n      return { ...state, isFetching: false, error: action.payload.error };\n    default:\n      return state;\n  }\n};\n\nconst movieDetail = (\n  state = initialMovieState,\n  action: MovieAction,\n): MovieState => {\n  switch (action.type) {\n    case ActionTypes.FETCH_MOVIE_START:\n      return { ...state, isFetching: true, error: false };\n    case ActionTypes.FETCH_MOVIE_SUCCESS:\n      const movie = { ...action.payload.result };\n      if (!movie.id)\n        return {\n          ...state,\n          isFetching: false,\n          error: 'Movie with specified ID not found!',\n        };\n      movie.release_date = new Date(movie.release_date).toLocaleDateString(\n        'en-US',\n        {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n        },\n      );\n      movie.budgetString = formatMoney(movie.budget);\n      movie.revenueString = formatMoney(movie.revenue);\n      return {\n        ...state,\n        isFetching: false,\n        data: { ...movie },\n      };\n    case ActionTypes.FETCH_MOVIE_FAILURE:\n      return { ...state, isFetching: false, error: action.payload.error };\n    default:\n      return state;\n  }\n};\n\nconst searchInfo = (\n  state = initialSearchState,\n  action: SearchAction,\n): SearchState => {\n  switch (action.type) {\n    case ActionTypes.QUERY_UPDATE:\n      return {\n        ...state,\n        query: action.payload.query,\n      };\n    case ActionTypes.SEARCH_BY_UPDATE:\n      return {\n        ...state,\n        searchBy: action.payload.searchBy,\n      };\n    case ActionTypes.SORT_BY_UPDATE:\n      return {\n        ...state,\n        sortBy: action.payload.sortBy,\n      };\n    case ActionTypes.SORT_OPTIONS_UPDATE:\n      return {\n        ...state,\n        sortOptions: action.payload.sortOptions,\n      };\n    case ActionTypes.SORT_ORDER_UPDATE:\n      return {\n        ...state,\n        sortOrder: action.payload.sortOrder,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  movies,\n  searchInfo,\n  movieDetail,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport { MainContainer } from './containers/MainContainer';\nimport { DetailContainer } from './containers/DetailContainer';\nimport { FetchMovies } from './containers/FetchMovies';\nimport { Header } from './components/Header';\nimport { Error } from './components/Error';\nimport { rootReducer } from './reducers';\n\nimport * as serviceWorker from './serviceWorker';\n\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware)),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Route>\n        <Header />\n        <FetchMovies />\n      </Route>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainContainer />\n        </Route>\n        <Route path=\"/detail/:id?\">\n          <DetailContainer />\n        </Route>\n        <Route path=\"*\">\n          <Error message=\"Page not found!\" />\n        </Route>\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}