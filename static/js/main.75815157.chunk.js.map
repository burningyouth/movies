{"version":3,"sources":["actions/index.ts","actions/actionTypes.ts","components/Error.tsx","components/CenteredBackdrop.tsx","containers/MainContainer.tsx","containers/DetailContainer.tsx","containers/FetchMovies.tsx","components/Header.tsx","reducers/index.ts","serviceWorker.ts","index.tsx"],"names":["queryUpdate","query","type","ActionTypes","payload","sortByUpdate","sortBy","sortOrderUpdate","sortOrder","searchByUpdate","searchBy","fetchMoviesStart","fetchMoviesSuccess","result","fetchMovieSuccess","fetchMoviesFailure","error","fetchMovieFailure","fetchMovies","page","dispatch","getState","searchInfo","pageParams","fetchUrl","fetch","then","response","ok","json","status","statusText","data","fetchMovie","id","movieDetail","movie","movies","find","item","FETCH_MOVIES_START","FETCH_MOVIE_START","FETCH_MOVIES_SUCCESS","FETCH_MOVIE_SUCCESS","FETCH_MOVIES_FAILURE","FETCH_MOVIE_FAILURE","QUERY_UPDATE","SORT_BY_UPDATE","SEARCH_BY_UPDATE","SORT_OPTIONS_UPDATE","SORT_ORDER_UPDATE","useStyles","makeStyles","root","display","justifyContent","alignItems","width","height","Error","props","Container","maxWidth","className","Typography","variant","component","color","message","children","flexDirection","zIndex","backgroundColor","CenteredBackdrop","open","Backdrop","gutterBottom","CircularProgress","Main","lazy","MainContainer","appState","useSelector","state","isFetching","fallback","total","Detail","DetailContainer","useParams","useDispatch","useEffect","title","document","handleQuery","FetchMovies","Fragment","link","textDecoration","Header","AppBar","position","Toolbar","to","initialMoviesState","totalPages","initialMovieState","initialSearchState","sortOptions","vote_count","vote_average","release_date","budget","revenue","formatMoney","amount","decimalCount","decimal","thousands","Math","abs","isNaN","negativeSign","i","parseInt","Number","toFixed","toString","j","length","substr","replace","slice","rootReducer","combineReducers","action","newItems","offset","concat","ceil","Date","toLocaleDateString","year","month","day","budgetString","revenueString","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","exact","path","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.75815157.chunk.js","sourcesContent":["import * as ActionTypes from './actionTypes';\nimport {\n  QueryUpdateAction,\n  MovieActionStart,\n  MovieActionSuccess,\n  MovieActionFailure,\n  MoviesActionSuccess,\n  Movies,\n  MovieEntity,\n  SortUpdateAction,\n  SearchUpdateAction,\n  SortOptionsUpdateAction,\n  SortOrderUpdateAction,\n  SortOptions,\n  AppThunk,\n  SortOrder,\n  SearchBy,\n} from '../typings';\n\nexport const queryUpdate = (query = ''): QueryUpdateAction => {\n  return {\n    type: ActionTypes.QUERY_UPDATE,\n    payload: {\n      query,\n    },\n  };\n};\n\nexport const sortByUpdate = (sortBy: keyof SortOptions): SortUpdateAction => {\n  return {\n    type: ActionTypes.SORT_BY_UPDATE,\n    payload: {\n      sortBy,\n    },\n  };\n};\n\nexport const sortOptionsUpdate = (\n  sortOptions: SortOptions,\n): SortOptionsUpdateAction => {\n  return {\n    type: ActionTypes.SORT_OPTIONS_UPDATE,\n    payload: {\n      sortOptions,\n    },\n  };\n};\n\nexport const sortOrderUpdate = (\n  sortOrder: keyof SortOrder = 'desc',\n): SortOrderUpdateAction => {\n  return {\n    type: ActionTypes.SORT_ORDER_UPDATE,\n    payload: {\n      sortOrder,\n    },\n  };\n};\n\nexport const searchByUpdate = (\n  searchBy: SearchBy = 'title',\n): SearchUpdateAction => {\n  return {\n    type: ActionTypes.SEARCH_BY_UPDATE,\n    payload: {\n      searchBy,\n    },\n  };\n};\n\nexport const fetchMoviesStart = (): MovieActionStart => {\n  return {\n    type: ActionTypes.FETCH_MOVIES_START,\n  };\n};\n\nexport const fetchMovieStart = (): MovieActionStart => {\n  return {\n    type: ActionTypes.FETCH_MOVIE_START,\n  };\n};\n\nexport const fetchMoviesSuccess = (result: Movies): MoviesActionSuccess => {\n  return {\n    type: ActionTypes.FETCH_MOVIES_SUCCESS,\n    payload: {\n      result,\n    },\n  };\n};\n\nexport const fetchMovieSuccess = (result: MovieEntity): MovieActionSuccess => {\n  return {\n    type: ActionTypes.FETCH_MOVIE_SUCCESS,\n    payload: {\n      result,\n    },\n  };\n};\n\nexport const fetchMoviesFailure = (error: string): MovieActionFailure => {\n  return {\n    type: ActionTypes.FETCH_MOVIES_FAILURE,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const fetchMovieFailure = (error: string): MovieActionFailure => {\n  return {\n    type: ActionTypes.FETCH_MOVIE_FAILURE,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const fetchMovies = (page: number = 1): AppThunk => {\n  return function (dispatch, getState) {\n    dispatch(fetchMoviesStart());\n\n    const { query, sortBy, searchBy, sortOrder } = getState().searchInfo;\n    const pageParams = `&offset=${(page - 1) * 9}&limit=${9}`;\n    const fetchUrl = query\n      ? `https://reactjs-cdp.herokuapp.com/movies?search=${query}&sortOrder=${sortOrder}&searchBy=${searchBy}&sortBy=${sortBy}${pageParams}`\n      : `https://reactjs-cdp.herokuapp.com/movies?searchBy=${searchBy}&sortOrder=${sortOrder}&sortBy=${sortBy}${pageParams}`;\n\n    return fetch(fetchUrl)\n      .then(\n        (response) => {\n          if (response.ok) return response.json();\n          return `Error: ${response.status} ${response.statusText}`;\n        },\n        (error) => {\n          dispatch(fetchMoviesFailure(error));\n        },\n      )\n      .then((data) => {\n        if (typeof data === 'string') return dispatch(fetchMoviesFailure(data));\n        dispatch(fetchMoviesSuccess(data));\n      });\n  };\n};\n\nexport const fetchMovie = (id: number): AppThunk => {\n  return function (dispatch, getState) {\n    if (!id) return dispatch(fetchMovieFailure('ID not specified!'));\n    if (getState().movieDetail.data.id === id) return false;\n\n    dispatch(fetchMovieStart());\n\n    const movie = getState().movies.data.find((item: MovieEntity) => {\n      if (id === item.id) return true;\n      return false;\n    });\n    if (movie) return dispatch(fetchMovieSuccess(movie));\n\n    const fetchUrl = `https://reactjs-cdp.herokuapp.com/movies/${id}`;\n    return fetch(fetchUrl)\n      .then(\n        (response) => {\n          if (response.ok) return response.json();\n          return `Error: ${response.status} ${response.statusText}`;\n        },\n        (error) => {\n          dispatch(fetchMovieFailure(error));\n        },\n      )\n      .then((data) => {\n        if (typeof data === 'string') return dispatch(fetchMovieFailure(data));\n        dispatch(fetchMovieSuccess(data));\n      });\n  };\n};\n","export const FETCH_MOVIES_START = 'FETCH_MOVIES_START';\nexport const FETCH_MOVIE_START = 'FETCH_MOVIE_START';\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\nexport const FETCH_MOVIE_SUCCESS = 'FETCH_MOVIE_SUCCESS';\nexport const FETCH_MOVIES_FAILURE = 'FETCH_MOVIES_FAILURE';\nexport const FETCH_MOVIE_FAILURE = 'FETCH_MOVIE_FAILURE';\nexport const QUERY_UPDATE = 'QUERY_UPDATE';\nexport const SORT_BY_UPDATE = 'SORT_BY_UPDATE';\nexport const SEARCH_BY_UPDATE = 'SEARCH_BY_UPDATE';\nexport const SORT_OPTIONS_UPDATE = 'SORT_OPTIONS_UPDATE';\nexport const SORT_ORDER_UPDATE = 'SORT_ORDER_UPDATE';\n","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ErrorProps } from '../typings';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: 300,\n  },\n});\n\nexport const Error = (props: ErrorProps) => {\n  const { root } = useStyles();\n  return (\n    <Container maxWidth=\"lg\" className={root}>\n      <Typography variant=\"h5\" component=\"h1\" color=\"textSecondary\">\n        {props.message}\n        {props.children}\n      </Typography>\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Backdrop, CircularProgress, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    flexDirection: 'column',\n    zIndex: 10,\n    backgroundColor: 'rgba(0,0,0,0.1)',\n  },\n});\n\nexport const CenteredBackdrop = ({ open }: { open: boolean }) => {\n  const { root } = useStyles();\n  return (\n    <Backdrop className={root} open={open}>\n      <Typography\n        gutterBottom\n        variant=\"body1\"\n        component=\"h3\"\n        color=\"textSecondary\"\n      >\n        Loading...\n      </Typography>\n      <CircularProgress color=\"primary\" />\n    </Backdrop>\n  );\n};\n","import React, { Suspense, lazy } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../typings';\nimport { Error } from '../components/Error';\nimport { CenteredBackdrop } from '../components/CenteredBackdrop';\n\n//@ts-ignore\nconst Main = lazy(() => import('../components/Main'));\n\nexport const MainContainer = () => {\n  const appState = useSelector((state: RootState) => state);\n\n  if (appState.movies.error) return <Error message={appState.movies.error} />;\n  if (!appState.movies.data[0] && appState.movies.isFetching)\n    return <CenteredBackdrop open={true} />;\n\n  return (\n    <Suspense fallback={<CenteredBackdrop open={true} />}>\n      <Main movies={appState.movies.data} total={appState.movies.total} />\n    </Suspense>\n  );\n};\n","import React, { useEffect, Suspense, lazy } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Error } from '../components/Error';\nimport { CenteredBackdrop } from '../components/CenteredBackdrop';\nimport { fetchMovie, queryUpdate, searchByUpdate } from '../actions';\nimport { RootState } from '../typings';\n\n//@ts-ignore\nconst Detail = lazy(() => import('../components/Detail'));\n\nexport const DetailContainer = () => {\n  const { id }: { id: string } = useParams();\n  const dispatch = useDispatch();\n  const movieDetail = useSelector((state: RootState) => state.movieDetail);\n\n  useEffect(() => {\n    dispatch(fetchMovie(+id));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    if (movieDetail.data.title && !movieDetail.isFetching)\n      document.title = movieDetail.data.title;\n  }, [movieDetail.data.title, movieDetail.isFetching]);\n\n  if (movieDetail.error) return <Error message={movieDetail.error} />;\n  if (movieDetail.isFetching || !movieDetail.data.id)\n    return <CenteredBackdrop open={true} />;\n\n  return (\n    <Suspense fallback={<CenteredBackdrop open={true} />}>\n      <Detail\n        movie={movieDetail.data}\n        handleQuery={(query: string) => {\n          dispatch(searchByUpdate('genres'));\n          return dispatch(queryUpdate(query));\n        }}\n      />\n    </Suspense>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { fetchMovies } from '../actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../typings';\n\nexport const FetchMovies = () => {\n  const dispatch = useDispatch();\n  const searchInfo = useSelector((state: RootState) => state.searchInfo);\n\n  useEffect(() => {\n    dispatch(fetchMovies());\n  }, [dispatch, searchInfo]);\n\n  return <React.Fragment />;\n};\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n});\n\nexport const Header = () => {\n  const { link } = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Link to=\"/\" className={link}>\n          <Typography variant=\"h6\">Movie searcher</Typography>\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import { combineReducers } from 'redux';\nimport * as ActionTypes from '../actions/actionTypes';\nimport {\n  MovieAction,\n  MoviesState,\n  MovieState,\n  MoviesAction,\n  SearchAction,\n  SearchState,\n} from '../typings';\n\nconst initialMoviesState = {\n  isFetching: false,\n  total: 0,\n  page: 0,\n  totalPages: 0,\n  data: [],\n  error: false,\n} as MoviesState;\n\nconst initialMovieState = {\n  isFetching: false,\n  error: false,\n  data: {},\n} as MovieState;\n\nconst initialSearchState = {\n  query: '',\n  sortBy: 'release_date',\n  sortOptions: {\n    id: 'ID',\n    title: 'Title',\n    vote_count: 'Total votes',\n    vote_average: 'Rating',\n    release_date: 'Release date',\n    budget: 'Budget',\n    revenue: 'Revenue',\n  },\n  sortOrder: 'desc',\n  searchBy: 'title',\n} as SearchState;\n\n//с просторов интернета\nfunction formatMoney(\n  amount: number | string,\n  decimalCount = 0,\n  decimal = '.',\n  thousands = ',',\n) {\n  decimalCount = Math.abs(decimalCount);\n  decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n  const negativeSign = amount < 0 ? '-' : '';\n\n  let i = parseInt(\n    (amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)),\n  ).toString();\n  let j = i.length > 3 ? i.length % 3 : 0;\n\n  return (\n    negativeSign +\n    (j ? i.substr(0, j) + thousands : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousands) +\n    (decimalCount\n      ? decimal +\n        Math.abs(+amount - +i)\n          .toFixed(decimalCount)\n          .slice(2)\n      : '')\n  );\n}\n\nconst movies = (\n  state = initialMoviesState,\n  action: MoviesAction,\n): MoviesState => {\n  switch (action.type) {\n    case ActionTypes.FETCH_MOVIES_START:\n      return { ...state, isFetching: true };\n    case ActionTypes.FETCH_MOVIES_SUCCESS:\n      let newItems = action.payload.result.data;\n      if (action.payload.result.offset > 1) {\n        newItems = state.data.concat(action.payload.result.data);\n      }\n      return {\n        ...state,\n        isFetching: false,\n        total: action.payload.result.total,\n        page: Math.ceil(newItems.length / 9),\n        totalPages: Math.ceil(action.payload.result.total / 9),\n        data: newItems,\n      };\n    case ActionTypes.FETCH_MOVIES_FAILURE:\n      return { ...state, isFetching: false, error: action.payload.error };\n    default:\n      return state;\n  }\n};\n\nconst movieDetail = (\n  state = initialMovieState,\n  action: MovieAction,\n): MovieState => {\n  switch (action.type) {\n    case ActionTypes.FETCH_MOVIE_START:\n      return { ...state, isFetching: true, error: false };\n    case ActionTypes.FETCH_MOVIE_SUCCESS:\n      const movie = { ...action.payload.result };\n      if (!movie.id)\n        return {\n          ...state,\n          isFetching: false,\n          error: 'Movie with specified ID not found!',\n        };\n      movie.release_date = new Date(movie.release_date).toLocaleDateString(\n        'en-US',\n        {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n        },\n      );\n      movie.budgetString = formatMoney(movie.budget);\n      movie.revenueString = formatMoney(movie.revenue);\n      return {\n        ...state,\n        isFetching: false,\n        data: { ...movie },\n      };\n    case ActionTypes.FETCH_MOVIE_FAILURE:\n      return { ...state, isFetching: false, error: action.payload.error };\n    default:\n      return state;\n  }\n};\n\nconst searchInfo = (\n  state = initialSearchState,\n  action: SearchAction,\n): SearchState => {\n  switch (action.type) {\n    case ActionTypes.QUERY_UPDATE:\n      return {\n        ...state,\n        query: action.payload.query,\n      };\n    case ActionTypes.SEARCH_BY_UPDATE:\n      return {\n        ...state,\n        searchBy: action.payload.searchBy,\n      };\n    case ActionTypes.SORT_BY_UPDATE:\n      return {\n        ...state,\n        sortBy: action.payload.sortBy,\n      };\n    case ActionTypes.SORT_OPTIONS_UPDATE:\n      return {\n        ...state,\n        sortOptions: action.payload.sortOptions,\n      };\n    case ActionTypes.SORT_ORDER_UPDATE:\n      return {\n        ...state,\n        sortOrder: action.payload.sortOrder,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  movies,\n  searchInfo,\n  movieDetail,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport { MainContainer } from './containers/MainContainer';\nimport { DetailContainer } from './containers/DetailContainer';\nimport { FetchMovies } from './containers/FetchMovies';\nimport { Header } from './components/Header';\nimport { Error } from './components/Error';\nimport { rootReducer } from './reducers';\n\nimport * as serviceWorker from './serviceWorker';\n\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware)),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Route>\n        <Header />\n        <FetchMovies />\n      </Route>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainContainer />\n        </Route>\n        <Route path=\"/detail/:id?\">\n          <DetailContainer />\n        </Route>\n        <Route path=\"*\">\n          <Error message=\"Page not found!\" />\n        </Route>\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}