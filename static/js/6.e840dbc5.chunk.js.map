{"version":3,"sources":["components/SearchBar.tsx","containers/SearchBarContainer.tsx","components/ResultBar.tsx","components/Movie.tsx","components/LoadMoreButton.tsx","components/CenteredProgress.tsx","containers/LoadMoreButtonContainer.tsx","components/MoviesList.tsx","components/SearchBy.tsx","containers/SearchByContainer.tsx","components/SortSelect.tsx","components/SortBy.tsx","containers/SortByContainer.tsx","components/Main.tsx"],"names":["useStyles","makeStyles","root","marginTop","textField","width","position","bottom","button","caption","color","textAlign","SearchBar","query","handleQuery","classes","useState","error","setError","useReducer","state","action","match","replace","queryState","queryDispatch","Fragment","noValidate","autoComplete","onSubmit","e","preventDefault","Grid","container","spacing","className","alignItems","item","xs","sm","TextField","label","value","helperText","onChange","target","Button","type","variant","SearchBarContainer","dispatch","useDispatch","useSelector","searchInfo","queryUpdate","ResultBar","total","Box","Typography","display","actionArea","flexDirection","justifyContent","mainContent","link","textDecoration","genres","height","paddingLeft","paddingRight","genresWrapper","chip","marginRight","overview","overflow","title","textOverflow","whiteSpace","Movie","movie","length","substr","trim","media","backgroundSize","backgroundImage","poster_path","md","id","Card","to","CardActionArea","CardMedia","src","CardContent","gutterBottom","component","Divider","light","slice","map","genre","Chip","size","key","marginBottom","LoadMoreButton","handleClick","onClick","CenteredProgress","CircularProgress","LoadMoreButtonContainer","moviesState","movies","isFetching","data","fetchMovies","page","MoviesList","theme","createStyles","searchBy","breakpoints","down","SearchBy","handleSearchBy","SearchByContainer","searchByUpdate","SortSelect","menuItems","sortOptions","sortOrder","handleValue","Object","keys","MenuItem","FormControl","InputLabel","Select","sortBy","SortBy","handleSortBy","handleSortOrder","sortOption","desc","asc","SortByContainer","sortByUpdate","sortOrderUpdate","controls","flexWrap","control","Main","Container","maxWidth","justify"],"mappings":"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","file":"static/js/6.e840dbc5.chunk.js","sourcesContent":["import React, { useReducer, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { SearchBarProps } from '../typings';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 30,\n  },\n  textField: {\n    width: '100%',\n    '& p': {\n      position: 'absolute',\n      bottom: '-30px',\n    },\n  },\n  button: {\n    width: '100%',\n    marginTop: 'auto',\n  },\n  caption: {\n    color: '#424242',\n    textAlign: 'right',\n  },\n});\n\nexport const SearchBar = ({ query, handleQuery }: SearchBarProps) => {\n  const classes = useStyles();\n  const [error, setError] = useState('');\n  const [queryState, queryDispatch] = useReducer(\n    (state: any, action: { query: string }) => {\n      let regex = /[*?&^%$@!()#|]/;\n      setError('');\n      if (action.query.match(regex)) {\n        setError(\"Don't use special characters!\");\n        return action.query.replace(/[*?&^%$@!()#|]/, '');\n      }\n      return action.query;\n    },\n    query,\n  );\n  return (\n    <React.Fragment>\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleQuery(queryState);\n        }}\n      >\n        <Grid\n          container\n          spacing={3}\n          className={classes.root}\n          alignItems=\"flex-end\"\n        >\n          <Grid item xs={8} sm={9}>\n            <TextField\n              label=\"Search\"\n              value={queryState}\n              className={classes.textField}\n              error={error ? true : false}\n              helperText={error}\n              onChange={(e) => {\n                e.preventDefault();\n                queryDispatch({ query: e.target.value });\n              }}\n            />\n          </Grid>\n          <Grid item xs={4} sm={3}>\n            <Button\n              type=\"submit\"\n              variant=\"outlined\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Search\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { queryUpdate } from '../actions';\nimport { SearchBar } from '../components/SearchBar';\nimport { RootState } from '../typings';\n\nexport const SearchBarContainer = () => {\n  const dispatch = useDispatch();\n  const query = useSelector((state: RootState) => state.searchInfo.query);\n  return (\n    <SearchBar\n      query={query}\n      handleQuery={(query: string) => dispatch(queryUpdate(query))}\n    />\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 20,\n  },\n  caption: {\n    color: '#424242',\n  },\n});\n\nexport const ResultBar = ({ total }: { total: number }) => {\n  const { caption, root } = useStyles();\n  return (\n    <Box className={root}>\n      <Typography variant=\"body1\" display=\"block\" className={caption}>\n        Found {total} movies\n      </Typography>\n    </Box>\n  );\n};\n","import React from 'react';\n\nimport { MovieEntity } from '../typings';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles({\n  actionArea: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n  },\n  mainContent: {\n    width: 'calc(100% - 32px)',\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n  genres: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    width: '100%',\n    height: 50,\n    paddingLeft: 16,\n    paddingRight: 16,\n  },\n  genresWrapper: {\n    width: '100%',\n  },\n  chip: {\n    marginRight: 10,\n  },\n  overview: {\n    height: 75,\n    overflow: 'hidden',\n  },\n  title: {\n    height: 35,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n});\n\nexport const Movie = ({ movie }: { movie: MovieEntity }) => {\n  const classes = useStyles();\n  let overview = movie.overview;\n  if (overview.length > 150)\n    overview = movie.overview.substr(0, 150).trim() + '...';\n  const { media } = makeStyles({\n    media: {\n      height: 450,\n      width: '100%',\n      backgroundSize: 'cover',\n      backgroundImage: `url(${movie.poster_path}), url(notfound.jpg)`,\n    },\n  })();\n\n  return (\n    <Grid item xs={12} sm={6} md={4} id={`item_${movie.id}`}>\n      <Card>\n        <Link to={`/detail/${movie.id}`} className={classes.link}>\n          <CardActionArea className={classes.actionArea}>\n            <CardMedia\n              className={media}\n              title=\"Movie poster\"\n              src=\"notfound.jpg\"\n            />\n            <CardContent className={classes.mainContent}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"h2\"\n                className={classes.title}\n              >\n                {movie.title}\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"p\"\n                className={classes.overview}\n              >\n                {overview}\n              </Typography>\n            </CardContent>\n            <div className={classes.genresWrapper}>\n              <Divider light />\n              <div className={classes.genres}>\n                {movie.genres.slice(0, 3).map((genre) => (\n                  <Chip\n                    size=\"small\"\n                    label={genre}\n                    className={classes.chip}\n                    key={genre}\n                  />\n                ))}\n                {movie.genres.length > 3 && (\n                  <Chip\n                    size=\"small\"\n                    label=\"···\"\n                    className={classes.chip}\n                    key=\"···\"\n                  />\n                )}\n              </div>\n            </div>\n          </CardActionArea>\n        </Link>\n      </Card>\n    </Grid>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport { LoadMoreButtonProps } from '../typings';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    marginTop: 30,\n    marginBottom: 30,\n  },\n});\n\nexport const LoadMoreButton = ({ handleClick }: LoadMoreButtonProps) => {\n  const { root } = useStyles();\n\n  return (\n    <div className={root}>\n      <Button variant=\"outlined\" color=\"primary\" onClick={() => handleClick()}>\n        Load more\n      </Button>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    marginTop: 30,\n    marginBottom: 30,\n  },\n});\n\nexport const CenteredProgress = () => {\n  const { root } = useStyles();\n  return (\n    <div className={root}>\n      <CircularProgress />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LoadMoreButton } from '../components/LoadMoreButton';\nimport { RootState } from '../typings';\nimport { fetchMovies } from '../actions';\nimport { CenteredProgress } from '../components/CenteredProgress';\n\nexport const LoadMoreButtonContainer = () => {\n  const dispatch = useDispatch();\n  const moviesState = useSelector((state: RootState) => state.movies);\n  if (moviesState.isFetching) return <CenteredProgress />;\n  if (moviesState.total === moviesState.data.length) return <React.Fragment />;\n  return (\n    <LoadMoreButton\n      handleClick={() => dispatch(fetchMovies(moviesState.page + 1))}\n    />\n  );\n};\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport { Movie } from './Movie';\nimport { MovieEntity } from '../typings';\nimport { LoadMoreButtonContainer } from '../containers/LoadMoreButtonContainer';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 40,\n  },\n});\n\nexport const MoviesList = ({ movies }: { movies: Array<MovieEntity> }) => {\n  const { root } = useStyles();\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={3} className={root}>\n        {movies.map((movie) => (\n          <Movie movie={movie} key={movie.id} />\n        ))}\n      </Grid>\n      <LoadMoreButtonContainer />\n    </React.Fragment>\n  );\n};\n","import React from 'react';\n\nimport {\n  Grid,\n  createStyles,\n  Theme,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\n\nimport { SearchByProps } from '../typings';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      width: '100%',\n    },\n    searchBy: {\n      marginRight: 20,\n      [theme.breakpoints.down('xs')]: {\n        marginRight: 0,\n        marginBottom: 20,\n      },\n    },\n  }),\n);\n\nexport const SearchBy = ({ searchBy, handleSearchBy }: SearchByProps) => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={4} className={classes.searchBy}>\n        <Button\n          variant={searchBy === 'title' ? 'contained' : 'outlined'}\n          color=\"primary\"\n          className={classes.button}\n          onClick={() => handleSearchBy('title')}\n        >\n          Title\n        </Button>\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <Button\n          variant={searchBy === 'genres' ? 'contained' : 'outlined'}\n          color=\"primary\"\n          className={classes.button}\n          onClick={() => handleSearchBy('genres')}\n        >\n          Genre\n        </Button>\n      </Grid>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchByUpdate } from '../actions';\nimport { SearchBy } from '../components/SearchBy';\nimport { RootState, SearchBy as SearchByType } from '../typings';\n\nexport const SearchByContainer = () => {\n  const dispatch = useDispatch();\n  const searchBy = useSelector((state: RootState) => state.searchInfo.searchBy);\n  return (\n    <SearchBy\n      searchBy={searchBy}\n      handleSearchBy={(searchBy: SearchByType) =>\n        dispatch(searchByUpdate(searchBy))\n      }\n    />\n  );\n};\n","import React from 'react';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SortSelectProps } from '../typings';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    marginTop: 30,\n  },\n});\n\nfunction SortSelect({\n  sortOptions,\n  sortOrder,\n  value,\n  handleValue,\n  label,\n}: SortSelectProps) {\n  const { root } = useStyles();\n  let menuItems;\n  if (sortOptions) {\n    menuItems = Object.keys(sortOptions).map((key) => {\n      return (\n        <MenuItem value={key} key={key}>\n          {sortOptions[key]}\n        </MenuItem>\n      );\n    });\n  } else if (sortOrder) {\n    menuItems = Object.keys(sortOrder).map((key) => {\n      return (\n        <MenuItem value={key} key={key}>\n          {sortOrder[key]}\n        </MenuItem>\n      );\n    });\n  }\n  return (\n    <FormControl className={root}>\n      <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\n      <Select value={value} onChange={(e) => handleValue(e.target.value)}>\n        {menuItems}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default SortSelect;\n","import React from 'react';\n\nimport { Grid, createStyles, Theme, makeStyles } from '@material-ui/core';\n\nimport SortSelect from './SortSelect';\nimport { SortOptions, SortByProps, SortOrder } from '../typings';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    sortBy: {\n      marginRight: 20,\n      [theme.breakpoints.down('xs')]: {\n        marginRight: 0,\n        marginBottom: 20,\n      },\n    },\n  }),\n);\n\nexport const SortBy = ({\n  sortBy,\n  sortOptions,\n  sortOrder,\n  handleSortBy,\n  handleSortOrder,\n}: SortByProps) => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={4} className={classes.sortBy}>\n        <SortSelect\n          label=\"Sort by\"\n          value={sortBy}\n          handleValue={(sortOption: keyof SortOptions) =>\n            handleSortBy(sortOption)\n          }\n          sortOptions={sortOptions}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <SortSelect\n          label=\"Sort order\"\n          value={sortOrder}\n          handleValue={(sortOrder: keyof SortOrder) =>\n            handleSortOrder(sortOrder)\n          }\n          sortOrder={{ desc: 'Descending', asc: 'Ascending' }}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sortByUpdate, sortOrderUpdate } from '../actions';\nimport { SortBy } from '../components/SortBy';\nimport { SortOptions, RootState, SortOrder } from '../typings';\n\nexport const SortByContainer = () => {\n  const dispatch = useDispatch();\n  const searchInfo = useSelector((state: RootState) => state.searchInfo);\n  return (\n    <SortBy\n      sortBy={searchInfo.sortBy}\n      sortOptions={searchInfo.sortOptions}\n      handleSortBy={(sortBy: keyof SortOptions) =>\n        dispatch(sortByUpdate(sortBy))\n      }\n      sortOrder={searchInfo.sortOrder}\n      handleSortOrder={(sortOrder: keyof SortOrder) =>\n        dispatch(sortOrderUpdate(sortOrder))\n      }\n    />\n  );\n};\n","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport { Grid, createStyles, Theme, makeStyles } from '@material-ui/core';\n\nimport { SearchBarContainer } from '../containers/SearchBarContainer';\nimport { ResultBar } from './ResultBar';\nimport { MoviesList } from './MoviesList';\nimport { MainProps } from '../typings';\nimport { SearchByContainer } from '../containers/SearchByContainer';\nimport { SortByContainer } from '../containers/SortByContainer';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    controls: {\n      display: 'flex',\n      alignItems: 'space-between',\n      flexWrap: 'wrap',\n      marginTop: 20,\n    },\n    control: {\n      width: '49%',\n      [theme.breakpoints.down('xs')]: {\n        width: '100%',\n      },\n    },\n  }),\n);\n\nexport default function Main({ movies, total }: MainProps) {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"lg\">\n      <SearchBarContainer />\n      <div className={classes.controls}>\n        <Grid\n          container\n          spacing={0}\n          className={classes.control}\n          alignItems=\"center\"\n        >\n          <SearchByContainer />\n        </Grid>\n        <Grid\n          container\n          spacing={0}\n          className={classes.control}\n          alignItems=\"center\"\n          justify=\"flex-end\"\n        >\n          <SortByContainer />\n        </Grid>\n      </div>\n      <ResultBar total={total} />\n      <MoviesList movies={movies} />\n    </Container>\n  );\n}\n"],"sourceRoot":""}